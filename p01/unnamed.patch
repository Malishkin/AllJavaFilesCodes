Index: p01/src/TestForAll.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/TestForAll.java	(date 1595784078124)
+++ p01/src/TestForAll.java	(date 1595784078124)
@@ -0,0 +1,17 @@
+import java.util.Scanner;
+public class TestForAll {
+    public static void main (String[] args) {
+
+        //факториал 4!=4*3*2*1
+        //1!=1
+        //2!=2*1
+        //15!=15*14*13*12*11*10*9*8*7*6*5*4*3*2*1
+        //0!=1
+        System.out.println(fac(4));
+    }
+    private static int fac(int n) {
+        if (n==1)
+            return 1;
+        return n*fac(n-1);
+    }
+}
Index: p01/src/Variables.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/Variables.java	(date 1595792634806)
+++ p01/src/Variables.java	(date 1595792634806)
@@ -0,0 +1,9 @@
+public class Variables {
+    public static void main (String[] args) {
+        int myInt = 557;
+        short myShort = 4321;
+        String s = "Hello";
+        System.out.println(myInt + myShort+s);
+    }
+}
+
Index: p01/src/com/company/Input.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/Input.java	(date 1595864589636)
+++ p01/src/com/company/Input.java	(date 1595864589636)
@@ -0,0 +1,11 @@
+package com.company;
+import java.util.Scanner;
+
+public class Input {
+    public static void main (String [] args) {
+        Scanner s = new Scanner(System.in);
+        System.out.println("Введите что-нибудь:");
+        int x = s.nextInt();
+        System.out.println("Вы ввели "+x);
+    }
+}
Index: p01/src/com/company/DoWhile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/DoWhile.java	(date 1595866171643)
+++ p01/src/com/company/DoWhile.java	(date 1595866171643)
@@ -0,0 +1,19 @@
+package com.company;
+import java.util.Scanner;
+public class DoWhile {
+    public static void main (String [] args)  {
+        Scanner scanner = new Scanner(System.in);
+        int value;
+        do{
+            System.out.println("Введите 5");
+            value = scanner.nextInt();
+
+        }while(value!=5);
+        System.out.println("Вы ввели 5");
+
+
+
+
+
+    }
+}
Index: p01/src/com/company/BreakContinue.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/BreakContinue.java	(date 1595867475059)
+++ p01/src/com/company/BreakContinue.java	(date 1595867475059)
@@ -0,0 +1,12 @@
+package com.company;
+
+public class BreakContinue {
+    public static void main(String [] args) {
+        for(int i = 0; i<=15; i++) {
+            if (i%2==0) {
+                continue;
+            }
+            System.out.println("Это нечетное число: "+i);
+        }
+    }
+}
Index: p01/src/com/company/Switch.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/Switch.java	(date 1595869526545)
+++ p01/src/com/company/Switch.java	(date 1595869526545)
@@ -0,0 +1,24 @@
+package com.company;
+import java.util.Scanner;
+
+public class Switch {
+    public static void main (String [] args) {
+      Scanner scanner = new Scanner(System.in);
+      System.out.println("Введи возраст:");
+      int age = scanner.nextInt();
+      switch (age) {
+          case 0:
+              System.out.println("ты родился");
+              break;
+          case 7:
+              System.out.println("ты пошел в школу");
+              break;
+          case 18:
+              System.out.println("ты закончил школу");
+              break;
+          default:
+              System.out.println("Ни одно условие не подходит");
+
+      }
+    }
+}
Index: p01/src/com/company/Arrays.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/Arrays.java	(date 1595871656919)
+++ p01/src/com/company/Arrays.java	(date 1595871656919)
@@ -0,0 +1,23 @@
+package com.company;
+
+public class Arrays {
+    public static void main(String [] args) {
+        int number = 10; //коробка, а в ней число 10 примитивный тип данных
+        int[] numbers = new int[5]; // numbers ссылается на [массив] ссылочный тип данных
+        for (int i=0; i<numbers.length;i++){
+            numbers[i]=i+1;
+        }
+        for(int i = 0; i < numbers.length; i++){
+            System.out.println(numbers[i]);
+        }
+        System.out.println("----------");
+        int[] numbers1 = {1,2,3,4,5};
+        for(int i=0; i<numbers1.length;i++) {
+            System.out.println(numbers1[i]);
+
+        }
+
+
+
+    }
+}
Index: p01/src/com/company/AgeName.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/AgeName.java	(date 1595964578358)
+++ p01/src/com/company/AgeName.java	(date 1595964578358)
@@ -0,0 +1,27 @@
+package com.company;
+import java.util.Scanner;
+
+public class AgeName {
+    public static void main(String [] args) {
+        Scanner s = new Scanner(System.in);
+        System.out.println("Hey, what is your name?");
+        String name = s.nextLine();
+        System.out.println("Ok, " +name+ ", how old are you?");
+        int age = s.nextInt();
+        if (age<25) {
+            System.out.println("You can't rent a car, "+name);
+            if (age<18) {
+                System.out.println("You can't vote, "+name);
+                if (age<16) {
+                    System.out.println("You can't drive, "+name);
+                }
+
+            }
+
+        }
+
+        else {
+            System.out.println("You can do anything that's legal , "+name);
+        }
+    }
+}
Index: p01/src/com/company/ClassMain1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/ClassMain1.java	(date 1595964358248)
+++ p01/src/com/company/ClassMain1.java	(date 1595964358248)
@@ -0,0 +1,23 @@
+package com.company;
+
+public class ClassMain1 {
+
+        public static void main(String[] args) {
+            String a = new String("Wow");
+            String b = "Wow";
+            String c = a; //"Wow"
+            String d = c; //"Wow"
+
+            boolean b1 = a == b; //"Wow"
+            boolean b2 = d.equals(b + "!"); //"Wow!"
+            boolean b3 = !c.equals(a); //"Wow"
+
+            if (b1 && b2 && b3) {
+                System.out.println("Success!");
+            }
+            else {
+                System.out.println("Not sussess...");
+            }
+        }
+
+}
Index: p01/src/com/company/Partlll.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/Partlll.java	(date 1596560890543)
+++ p01/src/com/company/Partlll.java	(date 1596560890543)
@@ -0,0 +1,68 @@
+package com.company;
+import java.util.Scanner;
+
+public class Partlll {
+    public static void main(String[] args) {
+        int i;
+        int sum =0;
+        for (i=1; i<1000; i++) {
+            sum = i+sum;
+            System.out.println(sum);
+
+
+
+       }
+        System.out.println("--------");
+
+        int x = 1024;
+        while(x>1) {
+            x = x/2;
+            System.out.println(x);
+        }
+
+        System.out .println("-------");
+
+        x = 10;
+        while (x > 5) {
+            System.out.println(x);
+            x--;
+
+        }
+        System.out.println("======");
+        i = 1;
+        while (i<50) {
+            System.out.println(i);
+            i++;
+        }
+        System.out.println("*******");
+
+        for(i=20;i>0;i-=2)
+            System.out.println(i);
+
+        System.out.println("///////");
+
+
+        int y;
+        sum = 0;
+        for (y=1;y<1000;y++) {
+            sum = y+sum;
+            System.out.println(sum);
+        }
+        System.out.println("________");
+        int j = 1024;
+        while (j>1) {
+            j = j/2;
+            System.out.println(j);
+        }
+
+
+
+
+
+
+
+
+
+    }
+
+}
Index: p01/.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/.idea/vcs.xml	(date 1598117477094)
+++ p01/.idea/vcs.xml	(date 1598117477094)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: p01/src/com/company/ArrayManipulations.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/ArrayManipulations.java	(date 1598204932881)
+++ p01/src/com/company/ArrayManipulations.java	(date 1598204932881)
@@ -0,0 +1,40 @@
+package com.company;
+import java.util.Scanner;
+
+public class ArrayManipulations {
+    private static void moveElementsOfArray(int[] arr, int n) {
+        System.out.println("Original array: ");
+        for (int i = 0; i < arr.length; i++) {
+            System.out.print(arr[i] + " ");
+        }
+        for(int i = 0; i < n; i++){
+            int j, last;
+            //Stores the last element of array
+            last = arr[arr.length-1];
+
+            for(j = arr.length-1; j > 0; j--){
+                //Shift element of array by one
+                arr[j] = arr[j-1];
+            }
+            //Last element of array will be added to the start of array.
+            arr[0] = last;
+        }
+        System.out.println();
+        System.out.println("Array after right rotation: ");
+        for(int i = 0; i< arr.length; i++){
+            System.out.print(arr[i] + " ");
+        }
+
+
+    }
+
+
+
+
+
+
+    public static void main(String[] args) {
+        moveElementsOfArray( new int []{1,2,3,4,5}, 1);
+
+    }
+}
Index: p01/src/com/company/RandomStars.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/RandomStars.java	(date 1598375415767)
+++ p01/src/com/company/RandomStars.java	(date 1598375415767)
@@ -0,0 +1,40 @@
+package com.company;
+import java.util.Random;
+import java.util.Scanner;
+import java.lang.String;
+
+public class RandomStars {
+    public static void main(String[] args) {
+        Random rand = new Random();
+        int number = rand.nextInt(6)+1;
+//        if (number==1) {
+//            System.out.println("*");
+//        }
+//        else if (number ==2) {
+//            System.out.println("**");
+//
+//        }
+//        else if (number==3) {
+//            System.out.println("***");
+//
+//        }
+//        else if (number==4){
+//            System.out.println("****");
+//        }
+//        else {
+//            System.out.println("*****");
+      //  }
+        for(int i =0; i<number; i++) {
+            System.out.print("*");
+        }
+
+
+
+
+
+
+
+        }
+
+
+    }
Index: p01/src/com/company/DimensionalArrays.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/DimensionalArrays.java	(date 1598292272591)
+++ p01/src/com/company/DimensionalArrays.java	(date 1598292272591)
@@ -0,0 +1,20 @@
+package com.company;
+import java.util.Arrays;
+
+public class DimensionalArrays {
+    public static void printArray(int array[][]) {
+        for (int row=0; row<array.length;row++) {
+            for(int colomn = 0;colomn<array[row].length;colomn++) {
+                System.out.print(array[row][colomn]+" ");
+            }
+            System.out.println();
+        }
+
+    }
+
+    public static void main(String[] args) {
+        int[][] myarray = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};
+        printArray(myarray);
+
+    }
+}
\ No newline at end of file
Index: p01/src/com/company/AgeinFiveYears.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/AgeinFiveYears.java	(date 1598294866934)
+++ p01/src/com/company/AgeinFiveYears.java	(date 1598294866934)
@@ -0,0 +1,18 @@
+package com.company;
+import java.util.Scanner;
+
+public class AgeinFiveYears {
+    public static void main(String[] args) {
+        Scanner sc = new Scanner(System.in);
+
+        System.out.println("Hello, what is your name? ");
+        String name = sc.nextLine();
+        System.out.println("Hi, "+name+", How old are you?");
+        int age = sc.nextInt();
+        int old = age+5;
+        int young = age-5;
+
+        System.out.println("Did you that in five years you will be "+old+" years old?");
+        System.out.println("And five years ago you were "+young+"! Imagine that!");
+    }
+}
Index: p01/src/com/company/MaxArray.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/MaxArray.java	(date 1598377156765)
+++ p01/src/com/company/MaxArray.java	(date 1598377156765)
@@ -0,0 +1,28 @@
+package com.company;
+import java.util.Scanner;
+import java.util.Arrays;
+
+public class MaxArray {
+
+    public static void main(String[] args) {
+        Scanner input = new Scanner(System.in);
+        int[] array = new int[3];
+        for (int i = 0; i < array.length; i++) {
+            System.out.println("Enter the number " + (i + 1) + ": ");
+            array[i] = input.nextInt();
+            int max = array[0];
+            for (int j = 0; j < array.length; j++) {
+                if (array[j] > max) {
+                    max = array[j];
+                }
+            }
+            System.out.println("The maximal number is: " + max);
+
+
+
+
+
+        }
+
+    }
+}
\ No newline at end of file
Index: p01/src/com/company/WhileNotZero.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/WhileNotZero.java	(date 1598379857832)
+++ p01/src/com/company/WhileNotZero.java	(date 1598379857832)
@@ -0,0 +1,18 @@
+package com.company;
+import java.util.Scanner;
+
+public class WhileNotZero {
+    public static void main(String[] args) {
+        Scanner input = new Scanner(System.in);
+        int number;
+        System.out.println("Enter the number: ");
+
+        do {
+            number=input.nextInt();
+            System.out.println("You entered number "+number);
+
+        }while (number!=0);
+        System.out.println("You finished the programm");
+
+    }
+}
\ No newline at end of file
Index: p01/src/Attributes.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/Attributes.java	(date 1595997902335)
+++ p01/src/Attributes.java	(date 1595997902335)
@@ -0,0 +1,8 @@
+public class Attributes {
+    int x;
+    public static void main(String[] args) {
+        Attributes myObj = new Attributes();
+        myObj.x = 40;
+        System.out.println(myObj.x);
+    }
+}
Index: p01/src/com/company/If_Else.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/If_Else.java	(date 1596562096989)
+++ p01/src/com/company/If_Else.java	(date 1596562096989)
@@ -0,0 +1,25 @@
+package com.company;
+import java.util.Scanner;
+
+public class If_Else {
+    public static void main(String [] arg) {
+        Scanner s = new Scanner(System.in);
+        System.out.println("Как тебя зовут?");
+        String myname = s.nextLine();
+        System.out.println("Отлично," +myname+ ", сколько тебе лет?");
+        int myage = s.nextInt();
+        if (myage<21) {
+            System.out.println("Ты не можешь купить водку, "+myname);
+            if (myage<18) {
+                System.out.println("Ты не можешь голосовать, "+myname);
+                if(myage<16) {
+                    System.out.println("Ты не можешь водить машину, "+myname);
+                }
+
+            }
+        }
+        else {
+            System.out.println("Тебе можно всё, "+myname);
+        }
+    }
+}
Index: p01/src/com/company/TwoDimensionalArray.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/TwoDimensionalArray.java	(date 1598982053055)
+++ p01/src/com/company/TwoDimensionalArray.java	(date 1598982053055)
@@ -0,0 +1,53 @@
+package com.company;
+import java.util.Arrays;
+import java.util.Scanner;
+
+public class TwoDimensionalArray {
+    private static void replaceNumber(int[][]array) {
+        Scanner input = new Scanner(System.in);
+        System.out.println("Please, enter the row:");
+        int myrow = input.nextInt();
+        System.out.println("Please, enter the colomn:");
+        int mycolomn = input.nextInt();
+        int oldnumber = array[myrow][mycolomn];
+        System.out.println("The number is "+oldnumber);
+        System.out.println("Please, enter the new number:");
+        int newnumber = input.nextInt();
+        System.out.println("The number is "+newnumber);
+         array[myrow][mycolomn]=newnumber;
+
+
+
+        for (myrow = 0; myrow<array.length;myrow++) {
+            for(mycolomn=0; mycolomn < array[myrow].length;mycolomn++ ) {
+
+                    System.out.print(array[myrow][mycolomn]+" ");
+
+
+            }
+            System.out.println();
+        }
+
+
+    }
+
+    public static void main(String[] args) {
+        int [][]myarray = {{1,2,3,4},
+                         {5,6,7,8},
+                         {9,10,11,12},
+                         {13,14,15,16},
+                         {17,18,19,20},
+                         {21,22,23,24}};
+        //System.out.println(array[1][0]);
+//        `for (int i = 0; i<array.length;i++) {
+//            for (int j = 0; j<array[i].length;j++) {
+//                System.out.print(array[i][j]+" ");
+//            }
+//            System.out.println();
+//        }
+        replaceNumber(myarray);
+
+//      `
+
+    }
+}
Index: p01/src/com/company/Functions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/Functions.java	(date 1596568014156)
+++ p01/src/com/company/Functions.java	(date 1596568014156)
@@ -0,0 +1,35 @@
+package com.company;
+
+public class Functions {
+    public static void printChorus(){  //идентификатор доступа, функция статична, тип возвращаемого значения и имя функции без параметров
+        System.out.println("Привет из функции!");  //вывод на экран сообщения
+    }
+
+    public static void main(String[] args) {
+        printChorus();
+        printToo("Света");
+        System.out.println(isPositive( -5.3));
+        myNameAge("Света",46);
+    }
+    static void printToo(String name) {
+        System.out.println("Привет передаёт "+name);
+    }
+    static boolean isPositive(double x) {
+        if (x>0) {
+            return true;
+
+        }
+        else {
+            return false;
+        }
+
+
+    }
+    static void myNameAge(String myname, int x) {
+        int year = 2020 - x;
+        System.out.println(myname + " was born at "+year);
+
+    }
+
+}
+
Index: p01/src/com/company/nameAge.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/nameAge.java	(date 1596568014163)
+++ p01/src/com/company/nameAge.java	(date 1596568014163)
@@ -0,0 +1,8 @@
+package com.company;
+import java.util.Scanner;
+
+public class nameAge {
+    public static void main(String [] arg) {
+
+    }
+}
Index: p01/src/com/company/Lion.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/Lion.java	(date 1598995143094)
+++ p01/src/com/company/Lion.java	(date 1598995143094)
@@ -0,0 +1,43 @@
+package com.company;
+
+public class Lion {
+    int height=120;
+    int wight = 500;
+    String color = "brown";
+    double roarDecibels = 5.5;
+    int maneLenght = 90;
+    int[] array = {200,300,400};
+    void roar() {
+        System.out.println("RoaRRRRR!");
+    }
+    String hunt() {
+        return "Rabbit!";
+
+
+    }
+    void lionColor() {
+        System.out.println(color);
+    }
+    void newHeight(int newHeight) {
+        height = newHeight;
+        System.out.println(newHeight);
+    }
+    public String toString() {
+        return height +", "+wight+", "+color+", "+roarDecibels+", "+maneLenght;
+    }
+
+
+
+
+
+
+    public static void main(String[] args) {
+        Lion lion1 = new Lion();
+        lion1.lionColor();
+        Lion l1=new Lion();
+        l1.toString();
+        System.out.println(l1);
+
+    }
+
+}
Index: p01/.idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/.idea/uiDesigner.xml	(date 1596568014118)
+++ p01/.idea/uiDesigner.xml	(date 1596568014118)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: p01/src/com/company/LittleLion.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/LittleLion.java	(date 1598991133780)
+++ p01/src/com/company/LittleLion.java	(date 1598991133780)
@@ -0,0 +1,25 @@
+package com.company;
+
+public class LittleLion {
+
+
+    public static void main(String[] args) {
+        Lion myLion = new Lion();
+        myLion.height = 140;
+        myLion.color = "white";
+
+
+        int w = myLion.wight;
+        System.out.println("My height is "+myLion.height);
+        myLion.roar();
+        String r = myLion.hunt();
+        System.out.println(r);
+        myLion.lionColor();
+        myLion.newHeight(200);
+        Lion lion = new Lion();
+        lion.wight = 250;
+        System.out.println("The wight is  "+lion.wight);
+
+
+    }
+}
Index: p01/src/com/company/StringMethods.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/StringMethods.java	(date 1596570727267)
+++ p01/src/com/company/StringMethods.java	(date 1596570727267)
@@ -0,0 +1,15 @@
+package com.company;
+
+public class StringMethods {
+ static void longString (String name, String name1) {
+     if (name.length()>name1.length()) {
+         System.out.println(name);
+     }
+     else {
+         System.out.println(name1);
+     }
+ }
+ public static void main (String [] arg) {
+     longString("world", "hello world");
+ }
+}
Index: p01/src/ErrotExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/ErrotExample.java	(date 1596870350890)
+++ p01/src/ErrotExample.java	(date 1596870350890)
@@ -0,0 +1,29 @@
+
+import java.util.Arrays;
+import java.util.Random;
+import java.util.Scanner;
+
+public class ErrotExample {
+    static public void main (String [] arg)   {
+        Scanner sc = new Scanner(System.in);
+        int userArray[] = new int[6];
+        System.out.println("Введите шесть номеров от 1 до 46");
+        try {
+            for (int i = 0; i<userArray.length; i++) {
+                userArray[i] = sc.nextInt();
+                if (userArray[i] < 1 || userArray[i] > 46) {
+                    System.err.println("The number is out of range!");
+                    break;
+                }
+
+            }
+        } catch (Exception e) {
+            System.err.println("Вы ввели не число!");
+        }
+
+
+
+
+
+    }
+}
Index: p01/src/com/company/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/Player.java	(date 1598996950849)
+++ p01/src/com/company/Player.java	(date 1598996950849)
@@ -0,0 +1,30 @@
+package com.company;
+
+public class Player {
+    String name = "John";
+    int score = 0;
+    String myName() {
+        return name;
+    }
+    int myscore() {
+        return score;
+    }
+    public String toString() {
+        return name+ " "+score;
+    }
+    public int scoreSum(int tempscore) {
+        this.score = score;
+        int sum = 0;
+        sum = tempscore+score;
+        return sum;
+    }
+
+    public static void main(String[] args) {
+        Player player = new Player();
+        player.name = "Bill";
+        player.toString();
+        System.out.println(player);
+        System.out.println(player.scoreSum(3));
+    }
+
+}
Index: p01/src/com/company/DeleteDoubles.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/DeleteDoubles.java	(date 1596892252819)
+++ p01/src/com/company/DeleteDoubles.java	(date 1596892252819)
@@ -0,0 +1,25 @@
+package com.company;
+import java.util.Arrays;
+import java.util.Random;
+import java.util.Scanner;
+
+public class DeleteDoubles {
+    static boolean duplicates(int[] array) {
+        for (int j=0;j<array.length;j++)
+            for (int k=j+1;k<array.length;k++)
+                if (k!=j && array[k] == array[j]) {
+                    return true;
+                }
+        return false;
+    }
+    public static void main (String[] args) {
+        int [] userArray = null;
+        Scanner sc = new Scanner(System.in);
+        userArray = new int[6];
+        System.out.println("Enter the six numbers of the array, no duplicate elements: ");
+
+    }
+
+}
+
+
Index: p01/src/Lotto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/Lotto.java	(date 1598721569754)
+++ p01/src/Lotto.java	(date 1598721569754)
@@ -0,0 +1,142 @@
+import java.util.Arrays;
+import java.util.InputMismatchException;
+import java.util.Random;
+import java.util.Scanner;
+import java.util.ArrayList;
+
+public class Lotto {
+    private static boolean doesValueExistInArray(int value , int [] numbers ){
+        for (int i = 0; i < numbers.length; i++){
+            if(value == numbers[i]){
+                return true;
+            }
+        }
+        return false;
+    }
+    private static int outOfRange(int value) {
+            do{
+                if (value<1||value>46) {
+                    System.err.println("The number "+value+" is out of range!");
+                    break;
+                }
+            }while (value<1||value>46);
+
+        return value;
+    }
+
+
+    private static int getValidIntegerFromUser() {
+
+        boolean isNumberIntValid = true;
+        int validInteger = 0;
+
+
+        do{
+            try {
+                Scanner sc = new Scanner(System.in);
+                validInteger=sc.nextInt();
+                isNumberIntValid = true;
+
+            }catch (InputMismatchException e) {
+
+                System.err.println("The format is not correct, please, enter the numeric value!");
+                isNumberIntValid = false;
+            }
+        }while(!isNumberIntValid);
+
+        return validInteger;
+    }
+    private static int [] getUserArray() {
+        Scanner sc = new Scanner(System.in);
+
+        boolean isRepeated;
+        int tmpValue = 0;
+        int[] userArray = new int[6];
+        System.out.println("Enter six numbers of the array from 1 to 46, no duplicate numbers: ");
+        boolean isNumberIntValid;
+
+
+        for (int i = 0; i < userArray.length; i++) {
+
+            do {
+                isRepeated = false;
+                // --- get valid integer from user
+
+                tmpValue = getValidIntegerFromUser();
+                tmpValue = outOfRange(tmpValue);
+
+
+
+                for (int j = 0; j <= i; j++) {
+
+                    if (userArray[j] == tmpValue) {
+                        isRepeated = true;
+                        System.err.println("The number " + tmpValue + " is duplicated!");
+                        break;
+
+                    }
+//                    else if(tmpValue<1||tmpValue>46) {
+//                        System.err.println("The number "+tmpValue+" is out of range!");
+//                        break;
+//
+//                    }
+
+
+                }
+
+            }
+            while (isRepeated);
+            userArray[i] = tmpValue;
+
+        }
+        return userArray;
+    }
+    private static int [] getlotteryArray(){
+        boolean isRepeated; //equal to doesValueExistInArray()
+        Random rand = new Random();
+        int min = 1, max = 46, slots = 6; //to define var to be const values "final"
+
+        int lotteryArray[] = new int[slots]; //all elements are initialised to be zeros
+
+        int randomNumber = 0;
+        boolean isValueExist;
+        for (int i = 0; i < slots; i++) {
+            do {
+                isRepeated = false;
+                randomNumber = rand.nextInt(max + 1 - min) + min; //1 to 46
+                isRepeated =  doesValueExistInArray(randomNumber,lotteryArray);
+            }
+            while (isRepeated);
+            lotteryArray[i] = randomNumber;
+        }
+
+        return lotteryArray;
+
+    }
+    private static void getGuessed() {
+        int[]userArray=getUserArray();
+        System.out.println("The array created is "+ Arrays.toString(userArray));
+
+        int[] lotteryArray = getlotteryArray();
+        System.out.println("The lottery array is "+ Arrays.toString(lotteryArray));
+        int counter = 0;
+
+        for (int i = 0; i < userArray.length; i++) {
+
+            if(doesValueExistInArray(userArray[i],lotteryArray)){
+                counter++;
+
+                //System.out.println("You guessed the number "+userArray[i]);
+            }
+            }
+        System.out.println("You guessed "+counter+" numbers");
+        }
+
+    public static void main(String[] args) {
+        getGuessed();
+    }
+}
+
+
+
+
Index: p01/src/com/company/MyClassPerson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/MyClassPerson.java	(date 1597508929087)
+++ p01/src/com/company/MyClassPerson.java	(date 1597508929087)
@@ -0,0 +1,46 @@
+
+package com.company;
+
+import java.sql.Driver;
+
+public class MyClassPerson {
+    String fname = "Malachi";
+    String lname = "Gutman";
+    int age = 42;
+    public MyClassPerson(int a, String n) {
+        age = a;
+        fname = n;
+
+
+    }
+
+    public static void main(String [] args) {
+        MyClassPerson myObject = new MyClassPerson(52, null);
+        Parametr sveta = new Parametr(173,"Sveta");
+        Car toyota = new Car();
+        toyota.actualSpeed(120);
+        sveta.love("Malachi");
+        Parametr malachi = new Parametr(170,"Malachi");
+        malachi.love("Sveta");
+        Parametr mama = new Parametr("Lena");
+        Parametr anton = new Parametr(170,"Anton");
+        System.out.println(mama.name);
+
+
+
+
+        System.out.println("The first name is "+myObject.fname);
+        System.out.println("The last name is "+myObject.lname);
+        System.out.println("The age is "+myObject.age);
+        System.out.println("My name is "+sveta.name);
+        System.out.println("His name is "+malachi.name);
+        System.out.println("Sveta's height is "+sveta.height);
+        System.out.println("");
+        Student freshmen = new Student(42,"Malachi",1);
+        freshmen.tell();
+
+
+
+
+    }
+}
Index: p01/src/com/company/Car.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/Car.java	(date 1597097679861)
+++ p01/src/com/company/Car.java	(date 1597097679861)
@@ -0,0 +1,18 @@
+package com.company;
+
+public class Car {
+
+    public void fullThrottle() {
+        System.out.println("The car can going about 200 km/h");
+    }
+
+    public void actualSpeed(int speed) {
+        System.out.println("Actual speed now is "+speed +" km/h");
+    }
+    public static void main(String [] args){
+        Car myCar = new Car();
+        myCar.fullThrottle();
+        myCar.actualSpeed(80);
+    }
+}
+
Index: p01/src/com/company/Parametr.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/Parametr.java	(date 1597104336668)
+++ p01/src/com/company/Parametr.java	(date 1597104336668)
@@ -0,0 +1,21 @@
+package com.company;
+
+public class Parametr {
+    public int  height ;
+    public String name = "Default";
+
+    public void love(String name) {
+        System.out.println("Love you, "+name);
+
+    }
+    public Parametr(int h, String n) {
+        //constructor
+        height = h;
+        name = n;
+    }
+    public Parametr(String n) {
+        name = n;
+    }
+
+
+}
Index: p01/src/com/company/LotoLucky.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/LotoLucky.java	(date 1597857895280)
+++ p01/src/com/company/LotoLucky.java	(date 1597857895280)
@@ -0,0 +1,89 @@
+package com.company;
+import java.util.InputMismatchException;
+import java.util.Arrays;
+import java.util.Scanner;
+import  java.util.Random;
+
+
+public class LotoLucky {
+    public static void main(String[] args) {
+                Scanner sc = new Scanner(System.in);
+
+        boolean isRepeated;
+        int tmpValue = 0;
+        int[] userArray = new int[6];
+        System.out.println("Enter six numbers of the array from 1 to 46, no duplicate numbers: ");
+        try {
+            tmpValue=sc.nextInt();
+
+
+            for (int i = 0; i < userArray.length; i++) {
+                do {
+                    isRepeated = false;
+                    tmpValue = sc.nextInt();
+                    for (int j = 0; j <= i; j++) {
+                        if (userArray[j] == tmpValue) {
+                            isRepeated = true;
+                            System.err.println("The number " + tmpValue + " is duplicated!");
+                            break;
+
+                        }
+                        else if(tmpValue<1||tmpValue>46) {
+                            System.err.println("The number "+tmpValue+" is out of range!");
+                            break;
+
+                        }
+
+                    }
+
+                }
+                while (isRepeated);
+                userArray[i] = tmpValue;
+
+            }
+            System.out.println("The array created is: "+Arrays.toString(userArray));
+        }catch (InputMismatchException e) {
+            System.err.println("Not a number!");
+
+        }
+
+
+
+        Random rand = new Random();
+        int min = 1, max = 46, slots = 6;
+
+        int lotteryArray[] = new int[slots];
+
+        int randomNumber = 0;
+        for (int indexDrawn = 0; indexDrawn < slots; indexDrawn++) {
+            do {
+                isRepeated = false;
+                randomNumber = rand.nextInt(max + 1 - min) + min;
+                for (int k = 0; k <= indexDrawn; k++) {
+                    if (lotteryArray[k] == randomNumber) {
+                        isRepeated = true;
+                        break;
+                    }
+                }
+            }
+            while (isRepeated);
+            lotteryArray[indexDrawn] = randomNumber;
+
+
+        }
+
+        System.out.println("The lottery array is: "+Arrays.toString(lotteryArray));
+
+
+        for (int i = 0; i < userArray.length; i++) {
+            for (int j = 0; j < lotteryArray.length; j++) {
+                if (userArray[i]==lotteryArray[j]) {
+                    System.out.println("You guessed the number "+userArray[i]);
+                }
+
+            }
+
+        }
+
+    }
+}
Index: p01/src/com/company/StringFunc.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/StringFunc.java	(date 1597168093507)
+++ p01/src/com/company/StringFunc.java	(date 1597168093507)
@@ -0,0 +1,32 @@
+package com.company;
+import java.util.Scanner;
+
+public class StringFunc {
+    public static void main(String [] args) {
+
+        Scanner sc = new Scanner(System.in);
+        String str1 = new String();
+        String str2 = new String();
+        System.out.println("Enter two words:");
+        str1 = sc.nextLine();
+        str2 = sc.nextLine();
+        if (str1.length()>str2.length()) {
+            System.out.println("The word "+str1+ " is longer then the word "+str2);
+
+        }
+        else if (str2.length()>str1.length()) {
+            System.out.println("The word "+str2+ " is longer then the word "+str1);
+
+        }
+        else {
+            System.out.println("Two words are equal");
+        }
+        String str3 = "hello";
+        String str4 = "world";
+        String subS1 = str3.substring(0,2);
+        String subS2 = str3.substring(2);
+        String conS1 = subS1.concat(str4);
+        String conS2 = conS1.concat(subS2);
+        System.out.println(conS2);
+    }
+}
Index: p01/src/com/company/FindName.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/FindName.java	(date 1597175890860)
+++ p01/src/com/company/FindName.java	(date 1597175890860)
@@ -0,0 +1,27 @@
+package com.company;
+import java.util.Scanner;
+
+public class FindName {
+    public static String getLongestString(String [] array) {
+        int maxLength = 0;
+
+        String longestString =null;
+        for (String s : array) {
+            if (s.length() > maxLength) {
+                maxLength = s.length();
+                longestString = s;
+            }
+        }
+        return longestString;
+
+    }
+    public static void main(String [] args) {
+        String[] names = {"Natasha", "Ola", "Katya", "Sveta", "Lena"};
+        System.out.println(getLongestString(names));
+
+
+
+
+    }
+}
+
Index: p01/src/com/company/AmericanLongestName.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/AmericanLongestName.java	(date 1597179016951)
+++ p01/src/com/company/AmericanLongestName.java	(date 1597179016951)
@@ -0,0 +1,19 @@
+package com.company;
+
+public class AmericanLongestName {
+    public static String FindLongestName(String [] names){
+        int size = names.length;
+        String longestName = names[0];
+        for (int i = 1; i<size; i++) {
+            if( names[i].length()>longestName.length()) {
+                longestName=names[i];
+
+            }
+        }
+        return longestName;
+    }
+    public static void  main(String [] args) {
+        String [] names1 = {"Natasha", "Zhenia", "Alex", "Mark", "Anton"};
+        System.out.println(FindLongestName(names1));
+    }
+}
Index: p01/src/com/company/IntExeption.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/IntExeption.java	(date 1598129836142)
+++ p01/src/com/company/IntExeption.java	(date 1598129836142)
@@ -0,0 +1,138 @@
+package com.company;
+
+import java.util.InputMismatchException;
+import java.util.Scanner;
+import java.util.Arrays;
+import java.util.Random;
+
+public class IntExeption {
+    private static int [] getUserArray() {
+        Scanner sc = new Scanner(System.in);
+
+        boolean isRepeated;
+        int tmpValue = 0;
+        int[] userArray = new int[6];
+        System.out.println("Enter six numbers of the array from 1 to 46, no duplicate numbers: ");
+
+
+
+        boolean isNumberIntValid;
+
+
+
+
+        for (int i = 0; i < userArray.length; i++) {
+            do {
+                isRepeated = false;
+
+
+                // --- get valid integer from user
+
+
+                tmpValue = getValidIntegerFromUser();
+
+                for (int j = 0; j <= i; j++) {
+                    if (userArray[j] == tmpValue) {
+                        isRepeated = true;
+                        System.err.println("The number " + tmpValue + " is duplicated!");
+                        break;
+
+                    }
+                    else if(tmpValue<1||tmpValue>46) {
+                        System.err.println("The number "+tmpValue+" is out of range!");
+                        break;
+
+                    }
+
+                }
+
+            }
+            while (isRepeated);
+            userArray[i] = tmpValue;
+
+        }
+        return userArray;
+    }
+    private static int [] getlotteryArray(){
+        boolean isRepeated;
+        Random rand = new Random();
+        int min = 1, max = 46, slots = 6;
+
+        int lotteryArray[] = new int[slots];
+
+        int randomNumber = 0;
+        for (int indexDrawn = 0; indexDrawn < slots; indexDrawn++) {
+            do {
+                isRepeated = false;
+                randomNumber = rand.nextInt(max + 1 - min) + min;
+                for (int k = 0; k <= indexDrawn; k++) {
+                    if (lotteryArray[k] == randomNumber) {
+                        isRepeated = true;
+                        break;
+                    }
+                }
+            }
+            while (isRepeated);
+            lotteryArray[indexDrawn] = randomNumber;
+
+
+        }
+
+        return lotteryArray;
+
+
+    }
+    private static int getValidIntegerFromUser() {
+
+        boolean isNumberIntValid = true;
+        int validInteger = 0;
+
+
+
+
+        do{
+            try {
+                Scanner sc = new Scanner(System.in);
+                validInteger=sc.nextInt();
+                isNumberIntValid = true;
+
+            }catch (InputMismatchException e) {
+
+                System.err.println("The format is not correct, please, enter the numeric value!");
+                isNumberIntValid = false;
+
+
+                //I've already found the bug!
+            }
+        }while(!isNumberIntValid);
+
+
+        return validInteger;
+    }
+    private static void getGuessed() {
+        int[]userArray=getUserArray();
+        System.out.println("The array created is "+ Arrays.toString(userArray));
+
+        int[] lotteryArray = getlotteryArray();
+        System.out.println("The lottery array is "+ Arrays.toString(lotteryArray));
+
+        for (int i = 0; i < userArray.length; i++) {
+            for (int j = 0; j < lotteryArray.length; j++) {
+                if (userArray[i]==lotteryArray[j]) {
+                    System.out.println("You guessed the number "+userArray[i]);
+                }
+
+            }
+
+        }
+
+    }
+
+
+    public static void main(String[] args) {
+        getGuessed();
+
+
+    }
+
+}
Index: p01/src/myPack/MyPackageClass.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/myPack/MyPackageClass.java	(date 1597497099341)
+++ p01/src/myPack/MyPackageClass.java	(date 1597497099341)
@@ -0,0 +1,9 @@
+package myPack;
+
+import java.awt.*;
+
+public class MyPackageClass {
+    public static void main(String[] args) {
+        System.out.println("This is my package!");
+    }
+}
Index: p01/src/com/company/Student.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/Student.java	(date 1597509340600)
+++ p01/src/com/company/Student.java	(date 1597509340600)
@@ -0,0 +1,22 @@
+package com.company;
+
+public class Student extends MyClassPerson {
+    int course = 1;
+    public Student(int a, String n, int course){
+        super(a,n);
+        this.course = course;
+
+    }
+    void tell(){
+        System.out.println(super.fname);
+        System.out.println(super.lname);
+        System.out.println(super.age);
+        System.out.println(course);
+
+    }
+
+    public static void main(String[] args) {
+        Student loveman = new Student(42, "Malachi", 4);
+        loveman.tell();
+    }
+}
Index: p01/src/com/company/Shape.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/Shape.java	(date 1597510223212)
+++ p01/src/com/company/Shape.java	(date 1597510223212)
@@ -0,0 +1,7 @@
+package com.company;
+
+public class Shape {
+    public void draw() {
+
+    }
+}
Index: p01/src/com/company/Circle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/Circle.java	(date 1597511700312)
+++ p01/src/com/company/Circle.java	(date 1597511700312)
@@ -0,0 +1,7 @@
+package com.company;
+
+public class Circle extends Shape {
+    public void draw () {
+        System.out.println("Круг");
+    }
+}
Index: p01/src/com/company/Square.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/Square.java	(date 1597511700286)
+++ p01/src/com/company/Square.java	(date 1597511700286)
@@ -0,0 +1,7 @@
+package com.company;
+
+public class Square extends Shape {
+    public void draw () {
+        System.out.println("Квадрат");
+    }
+}
Index: p01/src/com/company/Triangle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/Triangle.java	(date 1597511700303)
+++ p01/src/com/company/Triangle.java	(date 1597511700303)
@@ -0,0 +1,7 @@
+package com.company;
+
+public class Triangle extends Shape {
+    public void draw () {
+        System.out.println("Треугольник");
+    }
+}
Index: p01/src/com/company/LottoTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/LottoTest.java	(date 1597765855278)
+++ p01/src/com/company/LottoTest.java	(date 1597765855278)
@@ -0,0 +1,62 @@
+package com.company;
+import java.util.InputMismatchException;
+import java.util.Scanner;
+import java.util.Arrays;
+import java.util.Random;
+
+public class LottoTest {
+    private static boolean inRange(int number, int []array) {
+        for(int i =0; i < array.length; i++) {
+            if (number<1 || number>46) {
+                return true;
+            }
+
+            }
+        return false;
+        }
+    private static boolean doesValueExistInArray(int value , int [] numbers ){
+        for (int i = 0; i < numbers.length; i++){
+            if(value == numbers[i]){
+                return true;
+            }
+        }
+        return false;
+    }
+    private static int getValidIntegerFromUser() {
+
+        boolean isNumberIntValid = true;
+        int validInteger = 0;
+
+
+
+        do{
+            try {
+                Scanner sc = new Scanner(System.in);
+                validInteger=sc.nextInt();
+                isNumberIntValid = true;
+
+            }catch (InputMismatchException e) {
+
+                System.err.println("The format is not correct, please, enter the numeric value!");
+                isNumberIntValid = false;
+
+
+                //I've already found the bug!
+            }
+        }while(!isNumberIntValid);
+
+
+        return validInteger;
+    }
+
+    public static void main(String [] args) {
+        Scanner sc = new Scanner(System.in);
+        int [] userArray = new int[6];
+        System.out.println("Please, enter the number from 1 to 46 no duplicates:");
+    }
+
+
+
+    }
+
+
Index: p01/src/com/company/Compare.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/Compare.java	(date 1597778602298)
+++ p01/src/com/company/Compare.java	(date 1597778602298)
@@ -0,0 +1,22 @@
+package com.company;
+
+public class Compare {
+    private static int minArray(int[]array){
+        int min = array[0];
+        for(int i = 0; i<array.length;i++) {
+            if (array[i]<min) {
+                min = array[i];
+            }
+
+        }
+        return min;
+
+    }
+
+    public static void main(String[] args) {
+        int x = minArray(new int[]{5,3});
+        int y = minArray(new int[]{2,8});
+        int z = minArray(new int[]{100,15});
+        System.out.println(x+ " "+y+" "+z);
+    }
+}
Index: p01/.idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/.idea/encodings.xml	(date 1595670135197)
+++ p01/.idea/encodings.xml	(date 1595670135197)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="PROJECT" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: p01/.idea/description.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/.idea/description.html	(date 1595670001650)
+++ p01/.idea/description.html	(date 1595670001650)
@@ -0,0 +1,1 @@
+<html>Simple <b>Java</b> application that includes a class with <code>main()</code> method</html>
\ No newline at end of file
Index: p01/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/.idea/misc.xml	(date 1595670135180)
+++ p01/.idea/misc.xml	(date 1595670135180)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectKey">
+    <option name="state" value="project://e2804f05-5315-4fc6-a121-c522a6c26470" />
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: p01/.idea/project-template.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/.idea/project-template.xml	(date 1595670001664)
+++ p01/.idea/project-template.xml	(date 1595670001664)
@@ -0,0 +1,3 @@
+<template>
+  <input-field default="com.company">IJ_BASE_PACKAGE</input-field>
+</template>
\ No newline at end of file
Index: p01/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/.idea/modules.xml	(date 1595670135207)
+++ p01/.idea/modules.xml	(date 1595670135207)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/p01.iml" filepath="$PROJECT_DIR$/p01.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: p01/p01.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/p01.iml	(date 1595670001682)
+++ p01/p01.iml	(date 1595670001682)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
+
Index: p01/src/com/company/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/Main.java	(date 1597511660249)
+++ p01/src/com/company/Main.java	(date 1597511660249)
@@ -0,0 +1,11 @@
+package com.company;
+
+public class Main {
+
+    public static void main(String[] args) {
+        Shape [] arr = new Shape [] {new Circle(),new Square(),new Triangle()};
+        for (int i = 0; i<arr.length; i++) {
+            arr[i].draw();
+        }
+    }
+}
\ No newline at end of file
Index: p01/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/.idea/.gitignore	(date 1595670016300)
+++ p01/.idea/.gitignore	(date 1595670016300)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: p01/.idea/codeStyles/Project.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/.idea/codeStyles/Project.xml	(date 1595670012146)
+++ p01/.idea/codeStyles/Project.xml	(date 1595670012146)
@@ -0,0 +1,7 @@
+<component name="ProjectCodeStyleConfiguration">
+  <code_scheme name="Project" version="173">
+    <ScalaCodeStyleSettings>
+      <option name="MULTILINE_STRING_CLOSING_QUOTES_ON_NEW_LINE" value="true" />
+    </ScalaCodeStyleSettings>
+  </code_scheme>
+</component>
\ No newline at end of file
Index: p01/.idea/codeStyles/codeStyleConfig.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/.idea/codeStyles/codeStyleConfig.xml	(date 1595670012160)
+++ p01/.idea/codeStyles/codeStyleConfig.xml	(date 1595670012160)
@@ -0,0 +1,5 @@
+<component name="ProjectCodeStyleConfiguration">
+  <state>
+    <option name="PREFERRED_PROJECT_CODE_STYLE" value="Default" />
+  </state>
+</component>
\ No newline at end of file
Index: p01/src/com/company/RandomArrayGenerator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- p01/src/com/company/RandomArrayGenerator.java	(date 1596895225682)
+++ p01/src/com/company/RandomArrayGenerator.java	(date 1596895225682)
@@ -0,0 +1,97 @@
+package com.company;
+import java.util.Arrays;
+import java.util.Random;
+import java.util.Scanner;
+
+public class RandomArrayGenerator {
+    // define a function that get array and value as parameters and check if value is in array
+
+    static boolean isValueInArray( int[] array , boolean value){
+
+
+        return false;
+    }
+    static void duplicateNumbers(int[] array) {
+        for(int i=0; i<array.length; i++) {
+            for (int j=i+1; j<array.length; j++) {
+                if(array[i] == array[j]) {
+                    System.out.println("The array indicates duplicate elements: "+array[j]);
+
+
+
+                }
+            }
+        }
+    }
+
+    static void commonArray (int[] array1, int[] array2) {
+        for (int i = 0; i < array1.length; i++) {
+            for (int j = 0; j < array2.length; j++) {
+                if (array1[i] == array2[j]) {
+                    System.out.println("The common is "+array1[i]);
+                }
+
+
+            }
+        }
+
+    }
+
+
+
+
+    public static void main(String[] args) {
+        //How to enter functions because main is too long
+        int[]userArray = new int[6];
+        int[]lotoArray = new int[6];
+        boolean isInputValid;
+        int tmpValue=0;
+
+        Scanner sc = new Scanner(System.in);
+        userArray = new int[6];
+        System.out.println("Enter six numbers of the array from 1 to 46, no duplicate elements: ");
+
+        for (int i = 0; i < userArray.length; i++) {
+            do {
+                try {
+                    tmpValue = sc.nextInt(); //could be a problem try - catch could help to while or do while
+                    isInputValid = false;
+                }
+                catch(Exception e){
+                    isInputValid = true;
+                }
+            }while(isInputValid==true);
+            System.err.println("This is not a vald number, please, try again!");//if exeption - loop, else - get out of loop
+
+
+
+
+            do {
+                tmpValue = sc.nextInt();
+            }while(tmpValue>=1 || tmpValue<45);
+            System.err.println("This number is out of range!");
+
+            // --- value is ok
+            userArray[i] = tmpValue;
+
+        }
+        System.out.println("The array created is: "+Arrays.toString(userArray));
+        duplicateNumbers(userArray);
+
+        {
+            lotoArray = new int[6];
+            Random random = new Random();
+            for(int i = 0; i < lotoArray.length; i++) {
+                lotoArray[i] = ((int)(Math.random() * 46) +1 ); {
+
+                }
+
+            }
+            System.out.println("Random lotoArray is: "+Arrays.toString(lotoArray));
+            duplicateNumbers(lotoArray);
+
+            commonArray(userArray,lotoArray);
+
+        }
+    }
+}
diff --git p01/out/production/p01/com/company/LotoLucky.class p01/out/production/p01/com/company/LotoLucky.class
new file mode 100644
index 0000000000000000000000000000000000000000..e661d8dfb904ad12bb2ad0eb9fee2c97329386cd
GIT binary patch
literal 2459
zc$|e+TWl0n82%2svopIpg<cri0+rz+Etj_3TCvb#fue;%f!1oNBGcWW9oU^&W@oWY
z)CWW2t0ww_k#I{ezQIFLFoXva4d|P%BtDqv6N!mWiq!ASZs`IWZ8~%2{I~D>FK1@&
zJ-&4Zz&4ysU^)6!?2F@7yq3TM^vkFH8V)2dfP+$UNJ<7(98MsCJ`G3YdQ{$qGz`o2
zbqymL-bmn0jH)=MVNAta2`oXMyuGdAxQ2IBoKRs2#CAHa6Z8l~TGovSME7`UTVT<E
z<JyM`*>T$+w#GA*)DCzlD>GvGj@*}o(O}Za3)By!ylgwKoaIip4|st$P)MDg-a&(`
z<+uV%TE+%WS!b>GjO9+W4+XyCPVA6y;uNobfrOJkYUgY#u+tPA<K^%o!m6TQA#gJ7
z{cf%h9CY$oD@aZDO{MHy;CL=k#AzA9P1{p@ed}G~MJ<1Vyy_~T3M|N{s49y)l(Jmc
z_Nmf>Y;MHL6bKwI<ZZv#_pNDqjFDp0x7@U>!@T2BO1v!nB3YSbBx_9xDEW*R5M1XH
z*#2}WhVF;P#hMCK4Fy)}^g$~ZR#L?#HeE#r+r?fnn<1~@r|f->tn$Jq6>XE)I-2l;
zK+SUrs2JCgLRuQwI!<CjU{9Y*5@z0+GTjh5Z+a)qVA3`%$;&+Hds%a{8F=Ql&W)z)
zndw3<<D}S#Ir}bC#iR}gr*xb~Mn_i0t$((#y9-VxEi+3FPtN(8I$U`2mg7j7PJTXm
zdZmstpm~iHdxb#KVu>c~l^mDhC;U==I21IJJo3^h5HSC5C|KY_USL`!B8*x6Y};fu
zg%Vb&RV7S`#SBNif;myJ^LfGt^En9^6{md;BCN^a_$fOTJS7^M&Ifju!z4$=C{B^%
z75TG-wj~Ftp{1fi9+e1-RPK0~RiAgPs~{Fob8?rFfGw2|pz7LFLBAV>=buv^v3)ir
zX616Woc7jAZqJEIy(f+3E&czc)&j365?I{wyy1?g+7up~eE9OH5LCWg2-c64SjLy8
z{96Daj|T56xNGMsxGL*!LR=5kChxIOsL>73iw0PQ)m-CPgBOd=k;jOl3J_o3#)8os
zh}=YUAktGE`!>-Py#b{*HUo9T478p|r(!6L(L0y%VWhhxi5W3NxdN*(YQ)-_E@Ex8
z`v&5-kr=&+WUW4fs-_t%tX;&18B{aUHFPvZFCpGk-F6jgD%sYQ*~ZVs#I@NA%g@h#
zOa!HA@SMW^d!#kzR!i%~=+~$#^Q!7n7`WEp<~EkltiDT$cE+mPI@Rh}r)FqOEgtDi
zL^_j3($FqrU!=QHG1TY@BbJ^)gAqF+mAauD$t!4Rj2n8Jk+=vg+AS&Rr0^Rl{X|95
zNDQ7!Qt(X~r$)&sUd|~*3QM;)jN2IJ<5s4WYzw1bgjwdlG|Y)QmZRt&V%`sdZe3^J
zmf?Hc!(v3jKHuR0fFHvo`&fmAsKX*!)KIq=8~7P)MLo8l0Xxx%J}l)obs209(j@zz
zr`0E%kWZ;Uj}~0OI$WjSSJ+65O+;zMk7&cs{A52s2Y$y(c!-zr2fFY#BmRSKu@F6?
z0lUO1ydu`1S2T0qiaxO!`^0v1i5?sfV>l#EVo;pHVetWuh|l?aiLz__a?AO=OV%A^
zwHD2s+g7|!F6%hQtML)mQ>KuG#%wl15jEuAN|{dd-jdy)*iV+tND2qr!zj8qj{eX$
zDW{t?+C-eB_yU_*4ZbzWVJo!})QQiST?fy>1KdX^GgR;keqbEQ<yU;ie4C*%_q)ux
znLHli7Ix4h&N|#=6`EQ7ZbrWWW0sU-Dtc7xf>2ozK%J$bT9k=UM&Xu(`4^N~wn{0p
zhWxeC8=qxo^fIxE-QtO7Y!(Kp%EFatsW!r})ks$K2OeRCc!Y%5OgsLw5_`fo#@>Gc
DvAQu9

diff --git p01/out/production/p01/com/company/LottoTest.class p01/out/production/p01/com/company/LottoTest.class
new file mode 100644
index 0000000000000000000000000000000000000000..ba3dc2f33d11f808d648a8b6fa2056fc34ab50de
GIT binary patch
literal 1602
zc$|e(-EJF27(KJQ$;KNuaqZ^MO<@zDI6v3~(zMiRp_Bv+4pcZqf?RDj(`1XiYweCh
zB5}z}a0dvfH@TrgtpunKz)Nt?1rLCLa>nZ>LA8XXou6;cobP<+8~^&xPmcjC;{ylh
zuw>)43|_~w0|Qs|uwvt?j$9kU8xF3csyC}cxMAa_jW-1bSA#H6HwDbn+?IfKJKB{3
zqxB$^A9h+hGT!udnvCS@k?%FPyg1PNUeHqeK_W0w_oG&YU)u|hD)mUIXj3MtDqsiU
z$6mNc=wPX~U7Pz%Km`1141`^JfdMa$y(0l*o6&O(<@uj)c<o+>vE4`}TVAsx*A9b3
z)xujTc;G<Cm>^}*BKD*rFxahyO76*cJ&szRBsu{rBeRkC0)_fL@4%~cRM4z6d@l@T
zOqGH}vu93fVY{O?f~4gse}C=Jmu(e9A%VFdNljsnZZ6(sN!f!ld1*L}X?Z~?FkaeD
zX`3{m(ok^_?p3=sd+{DM7y29vWIB}HtJ7&jo!FP_fi`30#M-jHmc<B01<pTHl8v{r
zxP`Yh;C2@8U`D|Gzw)wJ!@59qb6>i5qnL+okho!_TtA9q>8nMz-IQJ;7hTCpV^<MK
z_hlUTZnqmVHr~zRJ=C&zUsEmL>4&F#?p^lAU2;|AF0U|!yW43u1K(3Jxz3jNeM~g}
z)T)nm?orTxLXD$D$rjtJeIHA04WhJGIxD>vot-T8J<uJoLwU&OMN(77@mY#HY|AM{
zp--5%+j`g3sZ0GkZblu28D#k{)xQA<-93&u?kb#xj?O=V_<;)p=Q$2`gEsOUvnc=t
zT;S|r4CB4aUlMI{zGU8*UU>W+#*5as$P{zs?=fH<e`SdKPkuL#2{5~)<0Jtx7$Qjl
z!z9Y!B9-VQE-?nCFo8+Vq~v<CtM?L$L<vlDJq+tF7$PVBB$dOXr%Jxyb**HorzBro
zm@a>FqT-KdROG3mz}y!Y%QNf585LtEDyHyUPsJ3TKT+Yp)G9_&5iY$=Mf}(kF>h7P
z)t_N}`T*u5SR0EEF|cY??_*@+0qp$HLuAZq@#`nQT|DMZi;AXbc&e_<8o^8kGg+9W
z!WXFVMPgnd>N343F*?UcnX9F)>UknZ*{oS&4I&(#zQmP5#AUopgvGhUN>cq<n190(
zV$;T)!ye3Ip;v+b)W%cw_1xeu4s|>EVd_48A$gJlS15OdSFe)%+KGkQu0;yg4IAmo
Q()1Zh)`bZ^I?eLxzxN1AH~;_u

diff --git p01/out/production/p01/com/company/Main.class p01/out/production/p01/com/company/Main.class
new file mode 100644
index 0000000000000000000000000000000000000000..ff987fa27b01ccde877b3f9f299b3c5fa81d41e5
GIT binary patch
literal 673
zc${rg%Wl&^6g^`nabr@_M<`GNeS|{VNLU~wkP2)nAt9x(a8)VlYT{by6vqjJ(~3PG
z!I};0Zm2{=KY+hsi^StxQ;AZrG;{8pdwtKD$Cn?UP5|6T)5irYcv$qX<inM4*+)^Z
z;lsm%4+l3rta!MkP<muilRZ&zo2%Ojg^j^(tWa&6G=4tncVoMyy9t?@_8`*9wzfvr
zr(_}9Gp{8V4f+AcP^WK#O>NS3=K4g1x#muLUmxfo(P=LTGi%b`x+p2b@r-ra_Sj?g
zKV>wftyQS){3Q_X>0!*|WSHsb<)$9yZamB@_~Bq=qxh*2cV%&MN4i!}!KA|UKV9hk
zEVp57l$<BSS0imn*3Ob!JcqQG#1-6@&Qs?PfYhJuyy))7QO2$AT78Hm$OXygK#4KV
z7r6?EidbAbhC0gARnDcHbTP%b^1A@jm?4%ii`wbW@5s8uho#SOI_?;5=NN^sQy8Pj
zs1$aJV|a`v!nXUk-a2`YYO8+lBg$_b_2K8&qg+Gu=GaM88+<A)OyDl@0WFLEB5PKt
keTh|$sNpiM5F2E!VxC^E<u0A?^1ABk8=Wd#&-ZfU7ubl3uK)l5

diff --git p01/out/production/p01/com/company/MyClassPerson.class p01/out/production/p01/com/company/MyClassPerson.class
new file mode 100644
index 0000000000000000000000000000000000000000..9f6d06c216eba1934b1f95585c0df189a3e63b6b
GIT binary patch
literal 1930
zc$|GzTUQ%Z6#fn*nPC`97$A^R+t5-7DKu5_Mr*ajUeG|XL6p|pAq-@2G82;tZM;1A
zL;M4-<%6!0EM+Z!fKR^o>Z8vte}K#H%)kOlDr?Q&=j?Ca_s-$Be}DNEz%0HoFo9b-
zZudaL9UXTSUr^*74euJ{1r3WjmJIZ$<2?f=ZYi>?B=70CuXs_%N)O)0Y7Z|T82Aut
z8Xg!(Dc=tj|45OKb$p`ZQ+51Iht#pIqohnWbl4g;4P3yMB4rJZKz!4a6<fe6Y|9;)
zccr(LF9tQo+qz27jlgcXMJg5q64xBh39bvIvI{3Ird9=F^Zo{v`wEU{FEuLbc5Owj
zyI};sB;8e6bJTrb7z@fyU0}3O@+*0MRp~YJi_Ljg*6Yi5t?qkFLr8uel`GQmROpA#
z2rX+{bT-fd7SJord+XbFDPURk9Xp`U)Ul|`vc_VA8g&za-}IG6|1phusX(nFU0EtS
zVLlZq#ibYc%uC;_+4XY8=5gqlT`_2E*j_+eqv$tkCHuA$Hsn~HmsQRtrm@Wsi%|#@
zlgKiiJB^?sJrh&Nn#kdjK>C^eQZ8l$20N9;T#HfZeNWY8;&ZqrDo|}M*j|_k&+!|o
zHVwXsD!wpLLsmoGM4-Uor`vq9;kX+%!&ob2JG1H3>On?rP{yfeOf;}#;t?LRtqNw!
zhp0fWl5x)tbej|{HjgNncgYT~R#?eoJyW)wt#S~VeW`i_u0V(OtBSrd@wIAj@-Xv*
zrRdJ873!6xpdsC2)wVa-iR?nSSFXRqc@1SduiX)6#b!OQD|F^J0<{Gp;`sSxDhD*N
zWrbT1i+)uD9Z=4`s%|dZn~>G2?J<p+PJvH|_M5L(J@6wD*C2aRks4=M*#9_4L_Ot%
zJN?R|o&>h*VvLX11RuF>eq2?kzo~uBJtghpG`NtYmw9`{yV4!YwIOm=*DktqR%{pX
zTr#(dL~c}(X-a<#P4lE@83Hg6BR8NU$)_xZUX1d6%%Bffh-M<EcmXelp~vtNgNyJq
z%XGSE^D<tEk`R9(PCtyl2W>4mE85Ttd+1r~#}Ag#=GN`OTx;XGrJ3a87EVoDT`lxQ
z3g25@RG5pUW0tWmw32P~&&3aLOW}#1Fp!Qv!C(tRJnkVyf5X;D3+YQw&`s9D>EqaF
zgvC2yXCf@o!t*Dvv&5#uNGI*iQJ9WB1I$E*V@I7@=gIeQVJ*qo#M&62)6!ZC7Z0a#
zAA_V8`#*pYo--KY0;D+NVa!o-18Ed+8V@)ho9MTkz;`&0pZO2x4~*j<Tok7;AySwW
z<9yquxEfbNzu`piDqiEQSDeG^oTb2su;}+Hqi2MHYj}f`p2Od`PFakR{=}O+#ToB+
Vyv0+3UK7mXCbvakKFs^={{YU6v}ynV

diff --git p01/out/production/p01/com/company/Parametr.class p01/out/production/p01/com/company/Parametr.class
new file mode 100644
index 0000000000000000000000000000000000000000..f8e112965ab0ac06bf8d543ae447636327fc43a8
GIT binary patch
literal 937
zc${rgYj4s}7=8{g3SALaF4N5m^U8p&UZ#G~_(6@y5~4)R5<ecGLYLB#u3f^<(qt^r
z#2?^~GCrrUoABYh_wzjO)1E(nfBpurhnHF0K~=++js)&za8LRB$~@5V5RY`^RJoRg
zfo)~#8X6j!0_mac42GeA*cV87a%2mbtwVV%EmwL2s}lx}H+aRK>mRdMt}QmV57>U^
z_u0<39MAq3jk<R5MRwg7%<oC}Kn9M==fzYwbdCfnt)4%!c*fG3SZx`QJ`6~fe(iWp
z_=Xd;{pEaO$m0p<9X|?s_6JA7=FT8?)g28x26kZytp5-3Hgep)9T>QQ$HZt+T6N+_
z&8mSXcxvDo_B1><@B&2v?Y;d?Ms8@JfHecxkQXQ|TU?-ULG-D6X!pV^rOxCiv_}F-
zKVqXi6Xy6<n=6G}%$6f+Pu7&av>cCZuP?B(?1L|q=7M-V6Z*3fm#i%ga-z6|mnz39
zb3JVFdF1%25)eu&BcX)TCmES2(w3NgW}cwm_yO??iLa+fnyD#P8az{^r_jE~C}mnb
zp3Lxb>!>iQ%x+>G*MT@v4E&><*qGz@IFqC=*H4kDo7ofS_01Ek)|-qjpetCRT}6ss
zJ@Y)5F3~EQ>I~qVri@K?L>%2DVIn3x6Vzs|)+$^gY+T_o$-@4eYmHduB{_w2o<fYS
K<lKty-u?%giL`eB

diff --git p01/out/production/p01/com/company/Partlll.class p01/out/production/p01/com/company/Partlll.class
new file mode 100644
index 0000000000000000000000000000000000000000..107dea2c8a7ea75076f495f09eb18497ea6953a9
GIT binary patch
literal 1102
zc${rhO-vI(7=1%`+ifY(mM&OJ1q7s2p@L8kKusheA)*p7#KeOvwSmQLOUl;B!5cSE
zdNU>*2$6#)Nkrqpc;TWak4C*?^q`)R`es`rCY@w{zVChC%=_NVygPjT2EZ^<KKRk;
z#YuGe(2X7qr{vtLA+DiMLqfx84QD*)_h3N4J!a-jJ1yXf_st0?6NTGZfu?CQpS@Db
zEo6(=jRlLI&~zbVSaU|vly=pr*h}WBfIgim<dW<wMt&_hV-#)6vPKE#3^Om#62CdU
zY}_@HmXTjf&e}yYzc}g~W)v5h-dqC~5GMN+d99XmT-{?|V_z0%n6-_}oy*2bm4$D%
zP%37!lcqHM)#C@`mVPv#(SxKPXEEr(kRRtTETHvQo3uv+JXMowj6034M5S?+tTd+G
zsy0%tQLsSZUl~^yma`fAKiBNqs-0yiu0qL{nmLGBNY1cen`LK>9LsL5;U<X{X;~Cg
ziBC!C^mr{v(TRHAzHD_6vUrY7w33_!XEpH>;<*C{IJzCDf*?nKB>*8bbM_((y^<{U
z8SSR;i)&mNiw0f$n+QkS=ErwX*R~7Sx)9stZ!|*6F4UlcbWGVoFs52*I%AC3F8`3Q
zn{dFFj%iy6RFQR8dAs~mf*yk0JutNCfYHAjJDHly439-Oj$nt|<zEu>5+kvcqALzH
zU0059Q@F)f8Rn~SOR2g_c41vrt&~bYR~>@ir6?{(lt=t6fQLnERMSfdd}!gijjL`-
z6{ke~6lstWjiMD3h+q=OaS2geW7G|_V;&t?;B74N8y3)o5_)hSy;x`V1I`bTz+(*H
z32){pALldfw!`%+KFGKH#CsUQd!+CI=kXaAoeN4=E`eNHolE<OV?0@q=O>;X;T*>c
za)_{w4O}3T2&48G72`_931-F6_#284tp}(VAz#oN@&yjy7ZEwMaI<#jZFKwrB8J{T

diff --git p01/out/production/p01/com/company/RandomArrayGenerator.class p01/out/production/p01/com/company/RandomArrayGenerator.class
new file mode 100644
index 0000000000000000000000000000000000000000..415a3d9bd968b3aa85110fb90b9b718859a05b0a
GIT binary patch
literal 2636
zc$|e+OK=lq9RF=L*-b-`wvd+62Ma2u=@Z0aAC#6-N+G34N|jc$+hl1MlHIu3V2jT~
z&(3)8;zh+7x#)~=Xc_A;<2YVCc=6_p2R*1Ky?J2J`ujH9Cso_z`@a1@fB)B){r2xK
z?gKcAw<Fk(WEn<qUd3nxGLm6j5c_jtxhR%Y1Y@`q#<+^-h2#qn?7-zPCd59e;zdEc
z62?nmyd1_<1UjZ8Xh2#;CW2}tBQS7P=^KLg7sia>&Z;m~T$7;mn3n1GN|57?;}U`c
zcE*sfD`{HB`C@L`aK`lMEGd;qJFREOb;lIXJ~8Odngt05lW9BG#&2G?=G!jnR>sct
zJB~g-WLSoyySCFU;W4u?u4jwJu;sDnIX*c&(KsO?q?ZVR$zeX+5JD0pGRiZ>eAZ0s
zt`CK-LR1nsB|?`dE}0T`rd&OJeMHausCE!Z&R%t+Qlq4!czzDA9*z)yPB$$HRq@H>
zHT{O(mesA9wv_9b)=an1h?<3AD_?X8+|1A!jmI`f4$h^GyldJP!&4kDY>_BWpy--e
zKNaK#b!Ud?cW>iILRqn3I6m64tnJ$VIqc^0<E3l_3TbL@u$)Tk7IWLJ;)IF>TZ4_j
zf=h^`?4px4PMabVHQUvqRal8a!vPi7qsW4wtGB{BSv0d5!;ugln>92qUz%xUykZoz
zwYq3V*2o!_Tj<iFuwaWNAH^$hR1~6cQDotTg;Gg0v!F?+cqEJ{Zs1h`X->kaLCZB9
ztzgb+R;lWmeN}VUP+WEFoOW1qZS81Bvu4@<0%jgJnXzqZ6~${J;+8SCuE1m2uBL13
zx{U9yS<7b)y<jwJt~0OcGi;Fq66!qpl7vvRi>|=Ms?Qi?SFNWh?HB};p-`8m;&qXY
zH=<}kD;s)iYp8fLiXObhzA6#4wfcMdQ9O;K614xDuT|4tsH4-@jI_Inl$tNN2BVe<
zd##5}yX^vN?Xu#AF1l3F^LfK!6Sc&*nTJP6eveSGE<XHU?67N>ND}tM9~JCgE!1W}
z9NoNl%5p+u+X3Q$2E_QThvN<FS~z>-+cJcnY8i9xu;qH!9<LGEaGXu$@zPuHu7+(w
z6W7@~ZA5oxJwvB(fLH5&@16}o5+la-AfMW}OM;qMf^>(603PS6ctizHaE+D(@FWg-
z*Ys0}`^p{M142jsbc<%x)2u3S(TIfSI)ElLlOGmM=iB%kLH?Ei19DGo;{GihuMJKe
zuM?-1L~U!LuJuDS+(lp+^5rE2D?^J=NL+-vi0~rH76Q`kmG2iMu3roIvIn98D%V|f
zRE|nipq6U~&po7_M2!bdqihuI%s@MV1<;4XJPGgvKHww#Rv`2c0qG&iq{asb@k66*
zeINZjq7QQKmrIzt<=*-x4|`o}Q~eg~k*(Ne54(uqo2}UE=%${C8;Ev4-PNOuv_6(V
zU{BC##K$fZd#{IGB)cEa_{r{P#0kRO6otALMH!Ca*-{jNv#eT}V!xIvUq+H*8Ie1J
z%h+-GE}~1=*%k5_45jih;+8v<m?EM)Q^RuX>Illcx1n~a!QT4d2P?ndMMY&L#e8Ng
z7`(OeXDnFW^3lp4g14KzrkD~7jxHz+eQ866_Ao<D_YmV&N)aEbJUq*&ro`SZMea~z
zYBQZzH^<a_sM&*k*WU?FjV`FP_1gwpbu`kv(H0-7nz+>8Vc6~HWH*%iIlsv~gH0J?
zTZ+8yWY%g}<_2c|5c4RckFf%s%ybX`dvTn#IDtW~BRI|Xpdr59oPmjRuqj`}dAy5J
zyoZZ;A1QoHiO+Be%iO=h1b)OMe!>;}f+??_dA>1q5=$q?L#FireRZ=B`dG~ptr1DD
z#tJ@RH;a=>s{_PxoHUk>S|_|Q{h3;#?h$(F=PAHweqh(PvuA4X9d%AoN_0gE;T0NI
wRSc>)%?~6ML!1ERoQg9m^t#THd{%UY^RH~y0RBR|iec#i_R;ZKZ_>~G1L~|&1poj5

diff --git p01/out/production/p01/com/company/Shape.class p01/out/production/p01/com/company/Shape.class
new file mode 100644
index 0000000000000000000000000000000000000000..bfb7dbb0cf40713f36760f820185596a698eaa4c
GIT binary patch
literal 328
zc${U9&1%9x6ot<<G0`;jr#^wZ{y=BbUB!*iRnUdS{Y@O|NK7P+EqyFkg)aI4eW=nq
zV-dlDxrcMk{owxmetiRYKtF<qPKa)Z9w8W+!qj7ecYU)U_>*#}3EjjLdb-=Bx_ag`
zm*grbGtL)W8SDQ;zh0SF!XU}Yjgr6R;zP|>yw#6VE-QW~MDuc2W%|ijAadpXn%_8v
zk0zmih7x+VS2-6iYL>2bR%3{U9Bp3%WI>sMI3-G=&D&4V-qoSZz=a-KGULMn+K5C6
T7f1Ncd7Oj62}nmUc3YQ!qUkrp

diff --git p01/out/production/p01/com/company/Square.class p01/out/production/p01/com/company/Square.class
new file mode 100644
index 0000000000000000000000000000000000000000..437ed7a8e87982e839d3d53a99e3f50f3424fb18
GIT binary patch
literal 495
zc${re%SyvQ6g|^dni%cd_XBsW3$qbiRNM%zf(ViBr)_9Q@~G)V=}!C%zoHgVaN!5I
zN`FYaNu^bEVD90bGw00Q`S^T$2XKTv4LOullu^l}s-cEe1#1e{8FDAW6Y`WHU2n7)
zGG~6*W+<4#voAuoZ3kDp?GRHo{SJ3pJP>jJO=e_Y3>m6s$9E0d1MZCs>n7xZ-6XXe
z@H+<0^24BGpNrVBG*b_+`7PI>Ag^FU$0oKIR-(sf5{;wh>3uYwJ}B7Mv4dT@`foZz
z=@;4O1LBHts^M_2XIP`5v|XCY4<$p*Ocdc8mx1u4B?Ftg^uo$NG=nmTJI5nm-TV<L
ziS9KUE$kyp{~50oSUdz(l{$lv5oQlw!JZOXqnb;|G?u99vjc?7gf#Tre4K;<>IA8B
X`UROqfJPXb@)WfQQRg9r<Ye&+p3i8f

diff --git p01/out/production/p01/com/company/StringFunc.class p01/out/production/p01/com/company/StringFunc.class
new file mode 100644
index 0000000000000000000000000000000000000000..1978e49c7169f0004ffe086391784f819db241ce
GIT binary patch
literal 1615
zc$|$?TXPd-7=FH-c9U*NyP>7=7)5Xk4WZB~CWr!338n!}tyDzaY}RCPvl}-Xksslu
z7hZVh;Ds~H$VECsXBaQlAI125n{+ts1)1!7K78NvzPtZDdhigy8mt_OSXb~)7VqLr
z4hg)cpqfJ(>(WwFaW;qdaZY+Zkme5+oX<hSx{3>uUsUmt<d;-zsQ6gLWf@hM<ccJp
zC}=3y6v&))JSRLSkTjOJ1yUFNjxCUHIG)`c_1ku^Wwu>f^oDPl?zR~?QlA=AVb2)~
zEHx~@U*R(_y*rgw7&u;cW8_&iM)Xa`6Ie8EG;Wzcnibddy3>eS)XxmMtWbz?3nYdX
zT@%kJblghIGCj`@WZhvHtjbfxq)FeY2|GPuYXa%vsNGtfa(dI2??t-g)Ms0vX??$G
z4x+0OdEzaQYx$$VvNs%g+x+93osexcyo8qp=AS#Cf~JP6xF!QW6_|VWj2b>ei}p)i
zXa}Y6wqLsK2c2P6!Ip;4v8~|?T-UIJF9i-gn|xv9xE(tX$ZqxQD6ypB2EGy~mYiY9
z^}Vhv+Os`L_5*I>I-%U!Z&fk_yJY_`GF>9jvt8FGr^oGR_!{3x@~s9FZH_K}wohH_
zYWtRLg-_q~&M>t5oS_{5!emU2U#WY8QOGK`+2^E|j97<UjHEvbpG>^Q#*Y&VF=hc}
zAT?JuG~(Ay_3WQQx!VE<jpexI$+))H4SUi1P^W4R2DaA`D92TN&NLkk>!_hWF>z2_
zx#3h^H0t%(z6(aYJ;VL9OhR$=g$_`|8(8AEL;eyFazja9p;jRm<mqF(5PwDPS4lIG
zF@@JiwMhV8M~OVkQg2R@#h*wbN87)9NbKB4au=z_9@0Cz$ZSq|^F9<^9V2^ujNGOq
z&6P1`%6xu@LFXPc#?9&n#>mr?*XKy+&W|zAv_DXju`99h<^A}TC*o&hN1dWxsHXIT
z)pRkHOpmcp%@kAQi&dqVDN;C8Rf}p-kwTU!#Vk`K0Lch|CJLkqW}s5a60aN%Q!@xh
z8M8Qp1AKet(Swekv4~%Y@2^DoH)4C2(f0_@E-U>_2>&5;63Fi+V6o0y<TH4PBREPZ
z3mD^VR!&5D%aoF=brQ!YrC4zV$0?;*_b_FH!@0-EG9`sQbey21vQw7RG)Paf`W%vv
Ta8tpmf>Zog6!tkCjd$&TDA98n

diff --git p01/out/production/p01/com/company/StringMethods.class p01/out/production/p01/com/company/StringMethods.class
new file mode 100644
index 0000000000000000000000000000000000000000..e385e8cb8d4e2c3d96f574b35b13f30959d63368
GIT binary patch
literal 856
zc${@oO>fgc5Pcgvw&OUoI8C6?K+9K?6ly?-OA!|&B%~B71?9qN<E$JP+Z#C!sQ(9v
zb2$Lwzz^U@A!awJqNu@=cfQ`tyqVoUe}DZ3@C;8~RM2v93%4uS#h!~hxa;7agZnNV
zJg~8Eqs?Hwh_kqO$zZfQ0|xVz90`VvUYv=yvver(_k5U;$M4CICj*|x%3e6lVjNEy
zZuUZ%2J}yOb{6!DJkFwHQH<qidc@!+GK=O;hW&Q$lz-wu!n0_BJi6@BOfsJ8zL%m5
zWfgnEQ0o^w{CLbK7kpA4XAI5uhxIiLo)d@qnkdoi%UK?Z*Rh^<Wr#xs_u!&xqvN5A
z0~-%LJi?)kz{6t@mGWnqCnJXHSR{$u)s}~=@ENxMyB&tjC6jl<QxO&`u8XZ%iO8a2
ztS{-!D&lNfh?D|yMyZYYV6hBND6yb)!Bd*8zQ)a9Pn4C=!WwICr8B@DJ(LR6XMm~k
z>Ga47NHUV;?hmkYQc9@NX=$f{D|C8u05-5m(ou_8Bu9iUk!*FpqjW(37u3GNAj|v;
zmo)O3=em$8>ciB9s#Lx~Y<5Uf4Vv>JsAEerY*BQJS~N*FQEFI(y@u<Hrq2nj2swV)
bw|>H2l6G~S8f>b%B<^4vH%QXk*2tZImgBRD

diff --git p01/out/production/p01/com/company/Student.class p01/out/production/p01/com/company/Student.class
new file mode 100644
index 0000000000000000000000000000000000000000..d2f2e3bd97b116d5869464cdb3a6fbaae23f2886
GIT binary patch
literal 960
zc${rg*=pNR5Iu@zE0V8c$6M;A>AuKH8h78E_9aj-I3bV{D1EwdR7XWikmP_rtEF|I
zg?>Oks`OmhG=Ug#M>BKh%sDgCpT9qU19*nF7D~8d!o*z@_i*22_`rgVw(=Zh)>XJ+
z;Nc=REf#i^d1T<RhQc5k#fhsy>oM5!LN9%%Va4wCzsOVB@ntyd?5D984!gbffd+j$
zI%0LX?}hH}C^&TE5Ax7wrrM7N(m#-~r{Y;sPmjGsL!&>4f)3A#499FYI&#CbOHRoX
zD(odPg>`*jL(a}<1L?7_X@9z0n%&EINTS-DYYm1Uow|V}-rDE11NXhB#EF@ZO$8CC
z;EBKz$_AbauJyUV3$zTp6nKT#0&ma~=%TE`Ei%oSh)g@umxE(Zbz2s=id7A*i<LX$
zZC@tIo*O4oHqV?rt9dFHvg0Im11=&OrD~PgjTd$HSez2#%78QGKZi2lP_;SN)ODgF
zpNtKAK4IRU;&XDSzMIXDjayJZ51{dIF|;}QoQ$^0$Yreaz3i-RoI!K+A6RhKXudMJ
zfEsNzD=6^MQG`LTi8?dR6o>|zK<2HGK+C)<Xc4VEMVh0>J<ccxyirx{Z^${{p-+&X
zdWHX<F~Q>0TcCF?rHMRk5f%g`lyIHxZ3<Fy#I)&5j)`knn-T63rNmT!!TeZps+Mtv
nVt;)Cao%|;6Io-=dNxu$W6MxvxxsgdU2ZbR-<?}kxZD2#wg9wR

diff --git p01/out/production/p01/com/company/Switch.class p01/out/production/p01/com/company/Switch.class
new file mode 100644
index 0000000000000000000000000000000000000000..d502c1de64995d9b17038520c0425425a3624d98
GIT binary patch
literal 1072
zc${rgOHUI~6#i~om|<GvQ9wk{L3|WYMiC!CaU;<*sbH)jQR3n<j%Bc&Hf5@^6Nu5o
zg^7FDF5Ex^)Ywq>uI~H>e}~3%XGoCHnVfsi`OfRR_uOB9f7Ag?U`E3UoKrB=g7dhb
zA%u%kyQCtaVHhJ48C7vv#T6A}Dhvfz6<lLzPTG#`-eCwQh8GwjcMH!ghPJfrSaaq4
zl2v-lmvV%3rVA#|E%1^p?E^64F59aNU1_tBH%N-ySu--PZP#3$CU2hG4nt33F}=cH
zaU;i_tdVg`wv(Oqd+}11vf~Zh49cp>9mgt>KX8{_J7;79ko;kuB?2tP(3)|%`SJlT
z`lRRz7_>~GTr#bDwj>!12#v`qF|?tbq2pLZ1>-SX$Ak>H5yMT~V(1f}MMdn29r0Z!
zr7o)8Te0P>dmB><ZpSc*sTih_B#PdK_faQrT?UI9#e8BI@KNzo)V&W>rbb0{(tc1>
z&D&(q1AkR)`PjbqUgjPN85dt<b6Iv@)OByuTNgDlD-^k_6SnKu7dzg&ptrX{qdGnf
zhW5ido?lwAO!o+sSzC3jJVQthtUI`HyI`c8V%epUSUgWx-kWIXkfRJ2%I^P(4{3^r
ziSY(7O}HqnoNSnA{6G}PdgG=X*MFQT45F1Dx%@(4a*(ukkY&)$Xm1*+f^GZmPFkCN
zFoHO(u^<3l=%&2|Jve!g{2O8VffqG|o>UO7B9gA4sk3<x%IF@{nf`Bn%UO~zf^UdK
zAsHi)ohD^M3nhHTpj0(q?U8EKSEEvmk-F_ykvZeUNpg%*r8rdd600OxvxMKLW6sk7
z9}&Z+6#a~NTf|tNL=V_f{3+U_SVSLA(^+~khkgvu+0PK(il#qEDmcqDO;gCN``0q~
E4~oVjHvj+t

diff --git p01/out/production/p01/com/company/Triangle.class p01/out/production/p01/com/company/Triangle.class
new file mode 100644
index 0000000000000000000000000000000000000000..786d7910e902faf15d14098f5870f1a07d8b9acf
GIT binary patch
literal 509
zc${re$xgyh6g`irv=*6h*0=)~c4OiK<Hp2QV@yieKcInUI*?K{>`dJH75;%5hhXFb
zT$LX(-c|(`yyV@Jd+s^s4PW2m34kN)DM%qNqkv)>B?V<vB&<nTXGon0NBE}<@oKHf
zkT`QYCPP*ij(IV(Tc+3GEsL0f?zXwr<emuoKQiI>#DJlqw_RJK-RI6oYmmh0T4tT*
z9gp8ID26-q+UB_kJ(>Uc;T6B;DkP*OY^d1879|A_)7#)>dKWwgli*`|AAAPy!C1n!
ziXH4Sl$M>ukYA*Y9`6&E3-dLL6q+#__@+&7bca4eS&t^d)h<2Z_=fM9+@{+Wm(UDS
zKkO`rd{uoR(kHrGuQjocB>ir<VqoEOsLIr7gp4qG@CNo6jTNe?h>T-}s`@J+%n&lH
g&dkSA7$83(R*1hMF%M7(LsOcf<{|PdBpWGnKiKARBme*a

diff --git p01/out/production/p01/com/company/nameAge.class p01/out/production/p01/com/company/nameAge.class
new file mode 100644
index 0000000000000000000000000000000000000000..3fad9bcf24c0a8373c6b7dde4292814a29cbfa20
GIT binary patch
literal 387
zc${rdO-sW-5Pj36iH*_LR=s<x3hu>QMJR%&podB?o;GobTat~esnDP0N$}tg@JETW
zYeB&-%sl3O%&?zd?;ilpv7aEoUW{Rk5h1$JMz@!QV0=6$gjdajBJ?wD)XlQamA#XB
z#mq2k3R%si)oxysVf(0`2?trx)Pn0tnw2oJR?|{VSgxfugv0TDwvaDURMM1U)>>`K
zi8~fZTM|YaR6;UqmbOsW+TBUlJI|akMTjoPHryl(eplV*3stl@LWlqBUI*l&+#{X@
vBQbVQ-axNjj=4vk46(&M{V|}2gt3Qh&$#d@m(%_Q<3B;d4t72Ey=(9d_c}@`

diff --git p01/out/production/p01/myPack/MyPackageClass.class p01/out/production/p01/myPack/MyPackageClass.class
new file mode 100644
index 0000000000000000000000000000000000000000..ff7402f1e2c3a1342a24b9030b5d9e89f51582b8
GIT binary patch
literal 567
zc${rf%TB^j5IvVyX|00Pf^WeUy09A)7Z^7ruBwti*tojX8@$*DX^RP;r3+15_yK;D
zaau@_q)juYbLQNcGrd2*U*7;OajKz&9Tg_(Wi&MGVo$-of&+%qwe)3t!;o*E4H*jE
z;7Kr4Z0U>pnKu&QfR9{aYIfjocgRDT<V&&;Kg)=rVSDo)cV4W!6!=(lT^>ap5_nwt
z4E6S-J>jq1a=AaY`f(`zaVH(e!!b25GRh2EKbVD%xRuE$W4-r9qSv9Itl&_`5spbR
zAU92Vy?JxG(6$tu=xCzFU}kz`sIDeIj3&Z~*QowHiiJmiCzw&eT-cO>)gzBFIThR^
zr$z?NpiGm@rTxuz*7|6nNcWOFIk03GiYjFmAtNlFe}cWGWsPEKL1KfVzWmm)NvL8A
kmF3~9v>9>l$kp;6D6AT2gh=O<|20uj#Wo?`ajG=_0MmPVW&i*H

diff --git p01/out/production/p01/Attributes.class p01/out/production/p01/Attributes.class
new file mode 100644
index 0000000000000000000000000000000000000000..2205a410d4e819b0f8da152c4499d300a86e6586
GIT binary patch
literal 572
zc${reT}uK%6g{)8Zf;werrGy*SVF$^W&{xg!BT-CNKd0JHsbEax<>u1q7n-F0sW}x
z>?%mm!<;+!+<VVGGv7ZSUjPoVYr;U$z=8=4#S~#Ng(WPTSi!1+H39L+b1slPQl1Kr
z1tv;+bpid<zjXxCw(^{dzT0$yYuW6Q$=ZHPcIz@wQ9dH|@J{svEc+x31J&$@POnPV
zmC6$+ly2;fe2|r{^xBmg8@zTk-XViFr*i+41rqMlWwRq-*8G0Za?Vt=Cq33bh-NI9
zm}1YEwlIm5fprTT*fg+ZVH-OFnehgyI<4>zReS1%j?1U}eHQXVJIb$I(Mw22j&$iL
z_YW;#+(%iL@6=1@dv&hW_~n4$p%tRWJ8cpzW);S$me?OaJjdl}VlpNLW{B3X0cm6y
zQ<z0|G~8gf#<=hatueraUCxx=puZqdeue&y<XA8Zov718f}%+j=_(R03<Z$GT<mZb
Md9H~(72?_XU;oK$o&W#<

diff --git p01/out/production/p01/ErrotExample.class p01/out/production/p01/ErrotExample.class
new file mode 100644
index 0000000000000000000000000000000000000000..a0f067ea8ddbee9e998573e5dcabbe3d44e6e116
GIT binary patch
literal 1119
zc${rg+fEZv6kVq+owf{6i=cw&;Ef8{dZ~B;Q9v|>Dkdc+#;2i<IM~iK)2V?sAtsvW
zlYgKw;h9D*5$p%}G=1@7cu?0VBx39&bN1P5-`3vy{P^{)3Lu5M5ws$%;CvYU7>K}!
zL3z6nLL!1BE=uH*L@tMLML{Zrs|tn`ToVY6n3m~|3i#va9}5H~>}Q5RTgJ4EhvmYY
z;mqoDc_OilozwG=b;p$YJ{WLcm?eSM%%tPk?&P9gDCUh};sxEb1UlnSGYk4FJ(<_7
z`DE60Oly8vRuLxuG=JvkIN&n5m@|s5X<N+U*PVHR_68XQe5D*sdzP|m=9Af+Zdryy
zQ@C6*oH57Im+1DCHCnQ+o_qN~FV;D8Mhbd40)a@@E;~8no+&#ybg+YjOst{}Q5ya$
zqTsrU8@MSQhE<H<mcTXdqgV0Py|3O@ZN*#HYVW-D+H!5B_CfQ$dsT0T>TAl1=2dGe
z+9i#iRV~F8jH<YeJ1WL7u3|#w>YjaJXjXmpnpx89va8w8HHQN*df9b@X$ffF$J%?1
z6eNjlZ%bAsi?^h+OufoL^<akr(Z6|S<`#^c`wx^|D!E316O?P*-;il1(^j$UatnrD
z;HZzr8ye(-{bYSG@DUgHH?X|{ET9ynmX`(Njh~HT8H;Y(a_f(ktMwa>gI=`o@ypK#
zA$P{}5Va(wpls^jgjlPaV?2X(Fo<@Z>Yf7*qk}SxP8`_}-i03l%GquBo>bu9L?9Cl
z?nE9`&=d=9K=F_E3|2p*f3Rm@1EHD0o<!ginkk}*FKDeG9E;Fv72!92vHJVxD%6J(
zR0*!J#!=kI6q;E@avEX_K!|#n^dq#Y(1`W1u_3lJN_33aeKMRP+iCL6;&{D>6!~}I
z0%MLb+cdLup_?~yr$-NEGtxMLldKxWUFPlOBu)|UMDQ276r5IYMs!DZ(KN2$Y>0m6
I>eK4`1Hp(9PXGV_

diff --git p01/out/production/p01/Lotto.class p01/out/production/p01/Lotto.class
new file mode 100644
index 0000000000000000000000000000000000000000..7aae163fe30b308d2845e6a27f819c4f7cf9add6
GIT binary patch
literal 3111
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
Q+))Zay&U<^N1m_z7ixlq;Q#;t

diff --git p01/out/production/p01/TestForAll.class p01/out/production/p01/TestForAll.class
new file mode 100644
index 0000000000000000000000000000000000000000..7ab0dbc12934d8616880a0cf1aab814ae22aa797
GIT binary patch
literal 637
zc${reT~8W86g>kAQ<g=j6l>|1sIAzC^5RQl)5J6(A*I>`!%LrrWrfjY*DQ;P|HdD{
zOZ!lb5B&lDDAO|w$)*YOaL?Rx?>+a-JUrh21#o~p8+p7appKU|a(HFqHQq?PmDm!<
zf7XGHzX)WT`+WiHYdG`-%3U3J$Fs@6i%!+RC$ruSUFG*xq)omgt$3`b0#5hTo5t-h
zI`aKPvJ<5PfsN+R?zy^BEnfwrRxgfpFgi?jsA$Bg>WVULoGF(r&CY&DKu|^yOTAdR
z7vI(8a<APBXOZi*wMok9@{dN)fy5JuhJ$VFI9NwjV%NbtyysxrD^N+-pA61DH~x?6
zT~A|gLPOz<h1$Za4qHEHG^SloO=!2ef)<dMCi8>EL;7g&+w(9d3t{Xr7MQh&f|&bo
z3-ODW3~a`HLS|58bQTT760v|al$XPw*kNkL-^j>2WdFcQC2XRJHbqjIA}V;A@cfmf
x%(ui7P^nut$XWAx-5OGDJWt#jtu-RJKF6En`c$uiXQ&Z37B7<|pC=YJ{{hzHamD}u

diff --git p01/out/production/p01/Variables.class p01/out/production/p01/Variables.class
new file mode 100644
index 0000000000000000000000000000000000000000..bb6426a1b53bb183237760e83f4ff71d4c0a05fe
GIT binary patch
literal 832
zc$|Gw+iuf95IvJPv6Gm#NtzaDXra*J1X6Q<Y2g7RM5L%7xr$Wr!X~lOt$c|b2PrT7
z6Fj66NPGZ)!H*zjozMzuVaqc+vuDm6&+d<3U%vx*f@ejPuw~$80k^QN<8~1mwv@S}
z%#Jd<Mcjp@qoJco$REf+#xDq2tI;KBufl;#SnkNcJ)HPGH#!nMk294{*cV<`L{i0z
zq!ypZF`?A?lOOMM(ibuytXc0nr{bfqJrN9TCyrz=+)rAFXvjs?lx;%JpSFXTKy8BV
zPo0x6Qjx>oScym}DLUaK>btL{QnYlgWKTg&n7G2MZ(Pp{b=)&?A1%WAzceo=(i^yu
zi9OiLJTUPPk90gXd8khbg>zcM%0=<p-l^M<|4KR2aqRj$&TzsTwYgv!+V8kc%*|Zk
zv*x@Qjoe^Bs9WvErJq`;VO+~fnc;u%MjXylgjMS@kP+1sK|Jb_iab8HT3W|0-zIgl
z)RO_Jp|V}#$YxLMbImi*=VW`CZ9YlzVAz^-0LrMaFQAImMe!%TjT-yia;9}qUitaF
zk~#c>>^Eq~XUJ{TKg^JC&7jX<%uu*sUt=~Pn^YUTE^)sd=t;NcoDnrff!Etu$5rlU
VU=!DHof%5l;J428gc}Lx=5L!lw7viU

diff --git p01/out/production/p01/com/company/AgeName.class p01/out/production/p01/com/company/AgeName.class
new file mode 100644
index 0000000000000000000000000000000000000000..cf2900010c7399139c10227622644e08520d8d76
GIT binary patch
literal 1369
zc${riTTc@~7(LShyDeKOtthDIC@KZ3^@4aoLA;>Va?u(L8WV?hQdYOS&31~`7k>!x
zg%=awBnpWn{s4az@tbW81=?ii>zs4G`EIlOcjxyX0At8U(TB8wixFHxCW;U)>wi~F
zT#e!y#x!!>z<3l9q)pt=_NIwj+TPaWgo!&Q?wXi1F=gPMfoX=WJGN`9NrrH0WRaoc
zfmf6aJvrNzbG7oa^k0f)hmb_hD+p&%__p3R!49=zR~h<p1+Sc;ry|^XX1XNjL|IM{
zT^6>>a3u96_g<`uj3eAqCa-+kElmW$gkK`}WE+}+X{JHcl<j2l1>w5V*T=eayw0eN
zS6GyYVp)b*UWvkoSy2gcrM4Nk&k)UfHNPNdY@NQ<O!bmJ$ifjEW#~N+(ZB->5AjF~
zW-L6$6NaNtWIfG4t_a2LDzDR-Tqi|c&02VhXBKjpCE5NA@7HXnD1EA7{zIBun8Q33
zlIAPkNA5XAE_|s^o3gNgSqsncg4(y_)i|Xxthg^-#RYBrG-rtK604q)8tUDJioU%X
zU_(ue7d=k%p^>>It|;~4DtBZ_I9#ieZAM5Tb_<waelH7Z57ek>FI2B8S!M|7!S^*L
zWP6#cTd66MOHrmF^{3hr`bvbonrd}ipa{E;$u=;9QPDd`2TZlUXr?PaDSf3G4yQ)i
z-J32^sYtiTaIxJH2cYI0$<b8a|27ypO4e1uyOhOg9Htjm|3YB;a?#pPy9`-IwsUj~
z>_<Qk(ApJ%9XLj-)ezt~PLPdY5GNbX>>k3T0e)>Gw6uZn7CLep=uC8N!nm*rbCx#S
zh%9X(n&{qym8K^Vqh%9^8j_yL!T7*B-nIziO<_Yb7*DL@RSVs_kB+b7W(%FzLx01G
z7B0Dm)5V5^V#g5+O74b%BupwTLRb_NgiKTUuZe$$L#U$%Ul7L{DSlFGbaO@<4ZtaI
svfcPjojwz^=PQPAR)6U58Ru}GVhxibhR_by45SQ<uznJb20g#<4<BVc=l}o!

diff --git p01/out/production/p01/com/company/AmericanLongestName.class p01/out/production/p01/com/company/AmericanLongestName.class
new file mode 100644
index 0000000000000000000000000000000000000000..4b16d1cf3cdf2f69458faa3ea602c73bfb24622f
GIT binary patch
literal 1041
zc$|e&-A>d%7(GL~+wM{pC@vxhh=S}cNCoj1Bq1gwB)e!*L$Z1`EX{7AKcriXc<ozw
zXH2|RFVL9C1Nb7ogBR#&ArW*F+su43-+bRWXHNV5`0EjXMLf)-2iNmZFs-4aqpYK%
zV@AiUjvG15!OFwH%{=C@py8H=MS<+H8@Ta`fKn=N3aF35ZAYND>ITlnzQ5%}Pvw@!
zj9CpE(%Y1go9s`MYTR<$0u$9n=vy3nGB~hSeJ64oGN^_@(`m;W(s!1KxaJ1iXHo*w
zrRUWh`9fNr44Rf5M{dwuD*u}j5H82MKqg=#`35>PQcT-@Mc8idEQ#5vvd4~PW49*v
z(reHvHv7^I1O_{5N_>$~lg!yv!Ms4;4)>#mv*so?40X8jTmoaDfL;T)aYvx<Z(IRw
zL&mb*lEi)1asrnNb=7lTGSp<W%L}gtaTsX0Yv3O48z^E>!vh0LSQZ%nkLl+qA8+kA
zjhIB96Ex#i`nlK7i#lk>j?aT|pLN9(8{E)(Lai|sJJP3h10B-5$X>GZXkf9_$v;f+
zzw1HrC=iJ$ocp-57zJad@)_bI7hUM*oK2GoOwPth0S0h^F_(C7+WdyqD&utJXt|;+
z)YO&Hk+&GGj4m9aYnJ03G;V6I74iPpkJ%3?WCA}1ErnD_r1334#|WXvxt^lVgtkKH
z94_M`hFC`uT*7dQFv;2>O3-kH=c5!c#(V+FF>*q~xG4T4c8;eLr$QZKbupIpZ&2!r
zsoHhb%-HpenYHU#Q?u)usoT|0$jy8~{t(@NoG7H^eWd6|iNX?TgC}6PnhF|2H?DD&
K7&)2tP5lNbG1(&k

diff --git p01/out/production/p01/com/company/Arrays.class p01/out/production/p01/com/company/Arrays.class
new file mode 100644
index 0000000000000000000000000000000000000000..90b28c9d02740452749c7a736874d8eb907a6b3c
GIT binary patch
literal 867
zc${rfT~8B16g|_OcDGBh(9)vff`A_dS{jY<K?sR4F_IM4SS4xj!J)2oYr7@etqJe`
z5?_4A2TY9N2l!iziLXY{GrL4%WRjUX_uO-5&$;{g<l`}bTd3JE;bbw3IUAQTZ(%{l
zMH5#{TouTy`+*;A2pE;69RYc7@Z1x~H~hfc9`*OU@UhzK5h*kVZPnXRp|A5(P)0BP
zp}<t5J?PiD_f>FEzZ-_?V7SI=U-^MRxw6~ns@JOCQ$eTRj6y%?tm$tFpL>%$6?XVa
z@eCUE1+fYNGr5qM+GUe<n%)o?Z$_&9YD?|Ms!U7^*v-KxY<u^8t#T|;w5ngv!9v!=
zwH&UaVqz(WWvq~2`?EAsrQiQ82~7MI=<apBcJvR_JQzk^pOYMnSSTfK{6YO8twc2B
zsXh%A&w%M}UuQjzOI9}Za7vZ4hK6}$_&@bZL1-^LZDw^w!I)nD0C5<X$9QI9&_Ir7
zE+JqX=NPldV<Kr5E0Dy2{)D}5eX_TV4X1ki7Wt~<$Y<^wL%jR-?G!7#N2=<q9>Iv=
zuS^T_2x+#p4C%IH+HIvXZYyKDEz@$hjoY#$Yiul%Su4r7Q?m2RVJu9Gyb}vbGt=Ho
z3bRmRoT0cyGOCO>DO>X%vHFz4UoiGij*UGaH;V!$xeYk%O>R#x9p9w3h9aioFLqfk
u(74Gr%4DSY<_ymBX5a!Dv&ftvD@<Gz-!b_Ef??_>780P$&Y5_;mwp4-XsUSt

diff --git p01/out/production/p01/com/company/BreakContinue.class p01/out/production/p01/com/company/BreakContinue.class
new file mode 100644
index 0000000000000000000000000000000000000000..b80931aaf22cbe1ff2024d0eedbb19d4b23522f0
GIT binary patch
literal 884
zc$|Gw&1(};5dXb=ZIW)2m^A$`QB$qDO>MVPPquhyK`6uzhy+ScFUcdmHrZXa8=*&w
zAowSE_0W@t3Qfgg{s2##ga3?(Ixh)GZFFH~-pres-*4XR*Powz0Pf>n923aLa0OR2
zT#F-!d=v#`=assy)Qvb6a8tuA4YwI0>(Y|mLx!NSSY-%p+6}>wEK5r~>9lLYea>qw
zilobSowusomC7FlL*5Iy&yXwE?Y2qcaO=R_a0TDnv@K6s9kE79Z7wZ_X=A6n%U^P{
z#jU1U@my&&*Ayg^BwLin-6l25j7ejdta!Y>_n12)<aovIxOMSJ4!E6zTv6pZbWCb6
zbS$FCF!OiIjgD+Jgv+qtf9N0jy@LP6Kk2_AIiyq1KPiy&ssGA9^Lq~pI+k!psbw82
zFg2{|DB&){+&>3rNd3WlTH6(M?_8*Iu<waBJ-gkZi|lY_X`9c8oktu6Z`0Tj?l{6~
zFf1Em9`8bEG!+%*jjjJ(M?HHOVwf^6CQ?Rb3?T;1QC^GInH@){ig~C%P<;U~wFA-#
z@=UUfY`Ay|c09OFl8y|5L8M6Q!vtJHnrsXiOpS`)QbvGmDY%|XCEsHy7k1tua)kUx
z1kMoLK1C=U?jn-wLhB;hMeH?WN58%u51K2W%LJvGN699j5l9S0@>hwi0-q*;0PQwQ
dCq<)#8O)NMBbh+x2LdcH`<)6HwNmVJzX4RZ*CYS{

diff --git p01/out/production/p01/com/company/Car.class p01/out/production/p01/com/company/Car.class
new file mode 100644
index 0000000000000000000000000000000000000000..74e836d675b407fa586525a5eecfb19994bb962b
GIT binary patch
literal 1059
zc$|GwYflqF6g>lNce^aKY<Z}lE{a+}SVR=Hs8JFVl152NFvd^QvbKx+XtrAoKTAK9
zL=u01KgxJ!+XzBqlf8HDoipd$M}PhP@e{x%UK%K3F^@aAtK*)5GL|$f8^~f&$BOdz
zm08uXro5wJ-GGTjWgaNAq2ZxGZrcmJ<b}X!dFenPvlAV<0)?s<x^KHd-HrEU-Dk$C
zMh)p7$k<cyAel*8UPoZE+K2*&Ut5O9&W?;L0_LZ#@9($bC`lA@Og56P^lNR`J><Lc
zt`f_3`k~lmDv(|%FjM|mJ(6Ff<IAw=)RNc>o0YUM88<0a8gfmd;FzicMlI^b4fl<w
zBz30N6xhThEDf6`9^tWoz29=}hK%`zb~7S_E$dM?u{YM&?azVJ(y(RX37!hfUetQs
z_54GZN>i`We(baZJB+^CUdJ}^3>9UzSyD=6;yF0m!iD*mxB|<>Ra_G&o@u<RAGwX>
zpH%I*lehu5!vY1S`^|fiv&U)@*5t~7{g;NM1+=z`d`@+`Jbb7**>1ZbH?TSka49wD
zo`UmS;D4_5B<iO)sPbiC1q=ND6`_6^2(=#C5+jFR&}WxVAinW1f+^ZunjFP6t=R`)
z2D9`+O>*#fi)eM1|BexBw1><YfkCfmbZF;D@_$LVi2=!b$|&qjlAI#@;RHEL>p`FE
zA#WKx^e{Gr+Q1ErrPMS1=L2eWn!`NF^SDk-U!+EiLX}QoQenKh(!<0`aj%EM8L`FL
e0OPEAg7p>{7taZlNNm&VlwF{dn%k}P?d?BkEz}SI

diff --git p01/out/production/p01/com/company/Circle.class p01/out/production/p01/com/company/Circle.class
new file mode 100644
index 0000000000000000000000000000000000000000..18816f7613325a0cbd3fd3b1d4e7e9d9a922e83f
GIT binary patch
literal 489
zc${re$w~u36s*oROGdN1FL+BlI2XY~#7n@_Ai_xQoym~2%*Ldn<R<tR{)Gw(9{d1L
z$q$KdCXxiSp<nT;UR5t&-yfd<PI0KCfQp7HYAWhF8rV><sbGtta4rHNFBr1TR+k~y
z3HvTX$r6EkHTHXMe8YPlF;y#cxYy;eNcvwgCx>FhP`8}WH)%&an3x?AJD%GnwIB0)
z2Hg(FvEyEf#8I59C%62L8&IGs*fy|(T?TdfG<%pmPG1%58Q8}G9r`zyp|VQaLmm-V
zPV!8T2LscdjHK(+d&03~XjrKtLi0KnfwX1pa-Z&2`-f&wqNMWz@-?lMNJ;dd-Rj~9
zdHTs@Wx$f_Q`M+52^nGj_#Nyym369xl+2<?)tC<ut`Rb<FU)6Y7@)l%Q_a31w+zq;
Q6O&3&%Mfi5Qc5SwKaG!L!T<mO

diff --git p01/out/production/p01/com/company/ClassMain1.class p01/out/production/p01/com/company/ClassMain1.class
new file mode 100644
index 0000000000000000000000000000000000000000..c55fbdf6398048398330db350eb858195708ab27
GIT binary patch
literal 1135
zc${rg?NZZF5Iwg|b3;fewv-PM1yLxJHu51NARs9GDd<=S1;!a~Lk5FwQkztVN5Kb>
z-}s}<$czu*Gx@c*1s$N7+}*urH@jy~`{Vbw?*OK-rlTFB9BB<>Izq^BWOYO^Dvhb(
zp7i4~Gtq)cOli2UV;T=M%y2y9m}OAs9oGpK7{aNMO$KGf+qD^DImfj(s-=Qmc_|7-
zLgG2k62(nXape6BRDySo&(NK-ypl<$EZhTgr6_!VT{!Oe995JkVCYQk<o3l!VHSnE
zXXb;7<L=GX=ZVT5bx1TxGcY0NHcJ%fSafz7LWOY(wq-CO%_KuK9|-IHx+vFaa`ciy
z40_(HRxEqfk<4TNS!U$`1J@8|Xumv+ba~}{l35ztbve6Sb&9)o#lSos5s3i<3s^L;
zgvT7q23GKdLCaSy%l7>Nj;97zWuLYUFX;EHzE5yAn<aUg>vw_Av%<b@1q{hlb0t+#
zF54~%l4(|O1v;ZnY_z~T-?bxkwU8=Q`$JU}{Y$eOgyu%JFUoe{2X={M^Qw|;qu%k%
z=hQ2pj<zUK$3zpDftTg2=wbjd`eVx{1SWqOvI)AG<Qe(M=n2?yJ>5Z8t%G4C$r_CU
zbfSxV3%b$M_?Ts>LL+Sd6rrtn_ykHW9$rsxWM-B0*cWi+2ugT5(xaRrvULJ=tOg#}
z$kfnMgFdZh(&Rp$7xHA}5Zy`j5Q!u|MB7)i#*G@HM`)E{8->SpR+3>Bt#zI{IHJTN
zM$F=b-6Xy<gsc&=Nh=Ft>d+o?lNSxPxQ<@(I^N<2`e>IZ-q3e_w0jIYxJ6Nzdc8(J
zMG9qdB;RdPU<MNyq)4UigSbNx$6e|)1oaQKjBpHb4F7w9CH4!$j4iRB=w+NHrRoZg
F`~@XN=*Iv6

diff --git p01/out/production/p01/com/company/Compare.class p01/out/production/p01/com/company/Compare.class
new file mode 100644
index 0000000000000000000000000000000000000000..a752824e1be84b4f8d8bd7225a0fe1f4fe896020
GIT binary patch
literal 1072
zc$|Gy+fEZv6kVq??F_?UD_6Be!0WV1i;7nYiINyes+iQ&5S|Y01P9w`Gfa*6X#5gh
zd@(WlP>dQrz;E#jOuVc!Eg?!{lXKSI>+G}k<xKkR*XMlz^H{WC<Gh7ITo}MbI0mv7
zbj9e%nYg6zvf5@X<WVp%XW)uJqUiZvxFn!C*@}R^+^o3*$&%;0kJ^n5H+Uj9>STsX
z&8n<dWZ)^kN9y4-Z(CrjRBbj2TrKJE6qXeR?t*~X@cg?$Aa?}f&iYDrML>95#JKG8
zv2{8c;{=Avp{zcCC|d{O4XNmHXT7u~U&umT`kRGv7<m5XLR6{@Hko{+&oOhn<f6WK
zC191C?V#%3_mryLD=)7u*%-nx8>1LAaMi{&%nMBXt9GyL)oX5G<2r6oa9SBRZQR0b
z19xmJpvWTn3_u`tD7Ct=<yOPLsPfKs=r-7WvmL4#Mkijg@R&(Mrgmk6jU;5N<@z;&
zjI)wG(rK?Y#?3l?ru3h9Gi-J#fl=pZAR|Wl6eM7@lvn4&jP=V{!3@7Z8|tS)sQGeF
z(kl=JF`nCl_&_6u6!%0#YB<i_?gn5OBScHROYib)Mr*{WoR%+Yi<#X1E=F^ie0moK
zq4*{y-v0iceiun8*;5o&QaaIwK|vD}v?uAQRMU)0kQwKSDPf$zNurK4?@lmnn%*F^
zpGXLi`a!7yWO%(>&wB>y#HaDE)|zInuIY)@Ply#GH%>QYDt|HZQ#C~-6|wXY+85|+
zdx)nyNDLbtn3)4(l12vu9ax9s8E0a!;v|PM#V+PJlnTe9ddPK4z-gX<5f9jvs(gyy
U=1kPr9RCQ;&{8jPHqt!z2l5fuH~;_u

diff --git p01/out/production/p01/com/company/DeleteDoubles.class p01/out/production/p01/com/company/DeleteDoubles.class
new file mode 100644
index 0000000000000000000000000000000000000000..212bdb02390edc563605d7b234223f4348b746a8
GIT binary patch
literal 1035
zc${@o-A)rh6#izn?b5pZ6+ucXF8H^t*u~!qK@%gIkQ6nkAyIA|mJt@VyUp&bk$Yal
zXuR=;8@Z4~4G-W8_z1p(A?lf>h{U?xnRDiw@0|0Uv;F$>(;k59xLH6RlLpS_aSrDT
z&~QO{7kgkAP({taB?D6oxmhpp<Q)dxt}ZfU?u9FYp}*k;;$hNS7SR*F>=ROKgf90N
zdE}{c2h7MdFJ>q=+_2@)YV%;znG?Q{VlGUG63;LcR+6^wxm*gOX6>c<>N5tmL2I7Y
zI$=DD_$Gt4L_lv-a(82aw+~CSxEC;t*h`Id{*pUB4_2L~jJ#lVCKb%1RmwZm<(eU%
z#3H)e$sW5zJ76W!^PQ&4gFr+|VKYo3S3L02Mvv*QE53;WPB0Aq6KmkIi8>rbm^N_*
zR~csR2U0|qToYF8y|RLIh_MyENTIaVDJuxAKU1-&UP}ZrzGWG>X41F2!BG0|L>UH-
zI(@XfE?jvGYHr3-w5VS-w&8<*z0jEt+KHsW2;QQONA0c`YM^?U$iD+0(=3kyhq}NF
zMq8bHRnYGCnJ|GK`a7ye2UF9e-K3L4mXXcYcELW7qoJ4fTngsUN4t4IKtBe^_Fxdj
zPVj3=rjwo4XUny{cc_*#&u>?hSE`iXps!Y`*UI&`$Y!>;H1_`2_bo>IH+?&mq3Vpo
zNOLN2MUrKauu1Z5Lh8g&^)2F>s9*>uNu7o%43nocO=AS7$d1w)M0Ot<+ee-a|3H>r
zN>jpEN2=G6T4s&U(4Ou<-$iC&Aor!v*g>|K`v~Kx`w<ETb*oX<UeZ;h+GAApPz|M_
XUnS+2aGEr*RO>j-5W<L~ZYF*MX)N8n

diff --git p01/out/production/p01/com/company/DoWhile.class p01/out/production/p01/com/company/DoWhile.class
new file mode 100644
index 0000000000000000000000000000000000000000..0561620d1148a84fedd01da4c538f9e9dfa57252
GIT binary patch
literal 843
zc${rg%Wl&^6g?9saUL#h6H*GakOD1k3pI}h76mpSq)6c*r7A+KCdNvqIOE6}S9HsQ
z4ZD5;ztD(2L?u3emHR2|5pc(eR1mS`xt??GJ@?M>eE;?J8-P{ZFQACaCaQVN;YtB1
zT-9IKa+oh*0oOHR=dfsE$;2{4_JNQ>Jz_BI#SMn^<KV5wFy0W-dmeRKUbxO%J|U$>
z;BtS1heGd%U|Ma89z&(!1|5gqE|)vbli<~+@VzynJ6uSHDf>-hi*Iws=d$fIRVZY8
zEosKXHkFr0&<tkJ<x+Yf@dG+i!grbjkoe3t_amBt)fvW`io5Tg@oq8~9iE}k45HBW
zo(esuHJoWh3t6x*#xVJxsEHdEZem3zI2LZ<Hp4``8~5Y=_)C0r@*&=@)=b>7a2Kl<
zYPd%#@$Si|Dy8V8<M^mrqj^WTK}x4*e9_wST=fss-03N=!;sR3RR#wZfm4^=NRcHT
z@6eH_?U97G(g-5;ci~HN@wBi!0w#yMdgtqg_UIpEO7Fd@OO@P?I$a}ux%86)(=O6_
zhIS4`MlrK=2)38d<FsZI(7*(()*u0sC{fI#jI+bykCb6hTsTJRbsxqd(v3bcrR)LB
z<pbm%&g4G-{-KdPA$y6UR=+^{TCs>6spT<EU$fL_o;v7`)qyH1n4(z3MVzA?GLgET
Vr|J|Tpj!45MH4f`%qEjx`U9FK!EgWo

diff --git p01/out/production/p01/com/company/FindName.class p01/out/production/p01/com/company/FindName.class
new file mode 100644
index 0000000000000000000000000000000000000000..c284ee9972c00305880cecc5c8a35e8f11317fa7
GIT binary patch
literal 1044
zc${rh-A)rh7(LVdZP@}AineGK{GlyB#fqp<xiKLjmSVDor15Gfo3hw$NxKkx?~@o4
zZ`BJhCh`D2gwNrXc&4o}XgAq8^L;b(ednCn{r>CgIe-;x#1O|^3>vZ)ayIfd=4~w4
zShTSeMFGn(IJh4}5f3b^Sa>L4mi)jEHw3h7ZdX8m*4p<3#>#%+RgRl`Ui+ooYcP{2
zw`#JnE8D(`2T46V@H+xi<yxy*;Cm#4Zei08_A9dKtqY9Ty|CO0>Ru;w!?qvP1?IA^
z%7^kq78)|B7y8-t-2W*7(NSH8EEuxgmR*5~A(aH8P5Gwm1@-WNCAI|Ojmre$ZYXQ7
zx8+e!gM~D$qLQZc11cHHPWd9+b@DL+3M0nc)^WS$ZTiZE_#eef>ZpTJj5%1vBkKRR
zmVi}}q3j$;8otxuXgrr;SD}02g+!g)rG>{1o?y*E5>pn|9hC4?U~-tvm%8li9eTBp
zx7rvuz+2tA%%j^0y(Sl0$K03ftMyxj7o?{=@??`HP7Fzt`;m$o^eLGgW)o)kdBvd~
z4MO?Aahy?sD2PV>4B`_f5nSPD_L4dh9G(6KOkk22Rl)~{&$!!C-?vs0+xg1k`Kqq1
z8c8Fmzr)O8(kQN(Df1MO>GyDYlTymuert#i7e5w0_Nb^{v#@&|BSf9`(}>|VMv!CY
z1;#~^RXp-sO>=e?*SK5#RVl`baS_wFPEI<Oaf7Q7WSCDuyP#&%!cAe}mI4aN{G^m9
z{g@qy@OUgj%-P?dRkeifR`rD8R*i(|R?URvR;`5XmOmpp{{^vAjQn+JlnOv!GIS=(
Yev0K(zZexLZW-#h!<jPqZtvW^-#LcRV*mgE

diff --git p01/out/production/p01/com/company/Functions.class p01/out/production/p01/com/company/Functions.class
new file mode 100644
index 0000000000000000000000000000000000000000..6b4bd8fade1a7693ec0e0c5dc754ed6db0a283bb
GIT binary patch
literal 1424
zc${@pNmCO+6#kloWHJm}AfOO1C}Kb%3b?W;tDs@ALQy52nlJ@}$xJGlpt(_MdH3W^
z%R2|8G^DUx&YmX!!QWx|dNL(jn5ypg`Yqr4Uca8-e-C~D7{n790rdMYfI$g2W!%DT
z8I8Cj;jWPPJih`1_9sq5!appu5idq%RHI+QeIXx+ZA`+rkP}`^dNIY|8P;^o9A$8Y
zyO$Z<6ULg#P#e{Bbv~P1Rntp+H9;1C)QI!MGEZyb>=@nVhL&Myj>e5-gjR~{xyW=@
zkDHpIXNDN6QfW;$CpL_9mg3w=uIUU-;b+lJzQrR6uCGU8CWWjI*~NK!ox&Q*xEUlH
zYRNDd0^u|Ab)K}TmPwbj%%YLeOl?c>4o`NkFtC@jCK;+@CXYX#<0+>tUotmONMq}&
zAbT2ZRuuCjbER@@mH=}qPg9YYkxj?dX-%Ni{J)4kfuNuX&0b6^c!(K>4(nra+bURl
z*4N^z5Gnhi;+x`Y>$`POd`rhdhZnO79^sOLHZ&8q^{EtW?JBq^%w4!50v;>4ifc55
zlRU?>T4GHlTJ6Vc{Uot%eYL(=yTx~8P!PqOf_W^^RfJyfOlZ|e>mhF1o<+Lvvg2i_
zJFK{{x~ay^W2RUxW2#AdSVoo{fzmZ<Mr2XUkr=8xNpoo^V`lK$!%pa8R4evv^HfUJ
z*BE-s&Hj|hX<a-U(<qr38pEdpDIyr2JsSWW^d|)%J`b1}A?@er6d}n-R`%?JeI}&>
z=ba$Hg%;YCQUF>JB<T}lbdoPqwD^2`sPMb;a0>ut1IV_k5)wiA(2fgE$})ipxL^U5
zeop~jN^OKxfSgB_-&5CDfO1Hqi4a6d7vV{$q8=2YQGJ9~5FzRf<fXUd)R=K<v=H_;
zR6pHEjlVXJx*l42)H^&Yj_|A{z3vEV3p%Mefl80lL7jrzj+MJ=-hV))d&jk7Uy(qm
zAqn`Y*9OXIK7u48jBb)Wb}W;~O|RU6+$57o?5y|xX<ZvRq$`;E{j>%1XgEo^RIH7P
gwNuL>yI81%gI=4q(8B1WDk3IAS_SFXZG;>D0FTQwi2wiq

diff --git p01/out/production/p01/com/company/If_Else.class p01/out/production/p01/com/company/If_Else.class
new file mode 100644
index 0000000000000000000000000000000000000000..0472562b5ac8fc64db8903a97f83070c948374e8
GIT binary patch
literal 1483
zc${@qOHUI~6#i}tooN}Qw1B9f#b<$PeZQ)xplG%Ds?ne^I+PJd+i6p##=0@ULK97l
zTZt~ZF>!?`h46Ck>dqe`o;y=x(b}Z<^q%kg?z!jdnfbZ4xC-Dfl0LK|B4Mu=`w;cP
zh5h2!0T~B<IE2F@b40>XAH0ajI40t887D+MDZrSFQ!-A==#z0q!dVID7(AzRLpS>v
z+~Mxq40Qw9QH`M~p&Q!OLS{tE-%>}?lnErVDK&jt&Ff-cN!FQ<^>K#QL@Jw!(l@6X
z#c2G|gA3_#Ek<xg)eVNW@V&$n^_dz?tHxL~Y36lfEGCM%)%+Mkum;M&=-i+K6ihuG
zO{P@C(DH<MGDSnp*jK8dtIrhGF#=hfp)qNysi#9~&b}@=C!wFgm&_LODQ!>}9VnIC
z?h{8TXv0Q^=6|Y67*KE?7X)EY!9`qR*up>X8NL{@CixuyYP}2bdA`bLtto4g%#AC!
zj4KKf7-HD?_dWXydU{mLlh6DU>6iF|^@^|X)rf+txW>>G30V_-k<MGP-ilbM!skLn
zo}&s1u472S4cuhd&r8;u5a|hBCQX?budTNszGzMHA9VJl*vu00U8Eu*hQ0rjd=oYK
zDpjXm_>7PW{=xt8ol`3%mPzoMFYpzoNCz+dzO<vE4oP86SnmZKtT8kU{y$z_8+oFo
z%ylWpzV)f%xT$3rTw>H(osrP9(YTQ-m_*mq3{6FQxF%o^VYXma3$Ig!Kf+**G=r2A
zyR;}6u07hap*=UnL&VS$?yfbc9yOQKj8Xb8Y8~-UsxmSpl+EmK8zfOBZkYDd8%Gyf
z=oKM8E-*36w6@bON|8~l@0kbtYQvjo_1MWeY^GIl2-t!Sie7YLt0QJ-;U*3+w*=Sl
zEZp;`OU$A^;3-4uEkhon%@VxB^Y8^4%1|Qo4K&hH#s-Jd)Ys{6E#ZC@(O)4toKAnB
zggaGm^Ix#PgyU6kU>*D!9aUIx9VVJ}+sz(Dqup`?Bm^N-YhKFv5TndFYX2_b53vD7
zG~p%um?r<e6HA!W;~0Q#2vKan7jk;LZO=#Sz)taM#S84hZmPA17>#hPVOm01LN{wC
JVvp^4?=Pr)wWk08

diff --git p01/out/production/p01/com/company/Input.class p01/out/production/p01/com/company/Input.class
new file mode 100644
index 0000000000000000000000000000000000000000..18b1cfb3978df6b884c65a19e14d10a9201005e4
GIT binary patch
literal 1006
zc$|Gx-*3`T6#gzS3Z=RYHinAIHg(-5tDC>ae(08%kPtP&ELnUi&|sHxOS)pVH=_?e
z=+pj_kqwB%{Q*9ef5>=lSwa+In|n_0ch32~({tNjzkgf+c!XUU6PS}QAH^Nql@Y)_
z@w5<uDq|5#0$G-DUq%#j5oCp55k?c{frM2FYYgEHlbh}qLr`7ZV+ifq6@y{CU~=Pi
zqgFDUcY4VpBwnz~y0xb}rr2MCA@_rM$dD+M?V3ibuJdCp&+830N5PtIa)zY(zHp#_
z)HO@zRjuecCa>mvDcz}x;t^p6=F|FthHF|{v8;1$I3jXHE6*So?S@k}UYVj1*%w_A
z`3fcxXP6wSmGDrZxjhyMPZT`GGlqHZ#A|xz-kI0wefG{Xy|3ghvffXx<DK@tcxS!u
z>k^(TSVvC51~wUH{_S?BVOkZ#VVLkvdfzg{Cm6e4C!=5s+rqq1@De-J)X<!$YQXoV
zbYPVKhKk3Bu2EwMh*3`W2V&a&T9P;P8jU2Sjtqz)2W_D-D11vD4+;|_U<Ro!c9sxS
zM<1QUjUzYDUH_}0vk2?;y1^?9*--^U(B;IafwY?cUpV60eTZR79Zt+)7UT36h${dl
z4xVg+b{cs`er%}?cIt<x$cB9|glV!$KLJV1kdGpTYnR2J5TqMe>msn<M6iuep^340
zxCLpsg~%ptx`^(#A;)7aDCriiv~ZQ81EnM}3%wX5;*1b`6swSZ<xHO)*Kvb<3=2r(
RCTXV#xrN*Qt7Lqp*+1ml_wWD!

diff --git p01/out/production/p01/com/company/IntExeption.class p01/out/production/p01/com/company/IntExeption.class
new file mode 100644
index 0000000000000000000000000000000000000000..4d3cb469af04bd538620f08099e14df8fd3fd5fc
GIT binary patch
literal 2942
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
NRW=sNpARL+e*%x#dUpT-

